{"config":{"indexing":"full","lang":["en","fr"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mkdocs Obsidian is an association between an Obsidian plugin and a Material mkdocs template to get a personal wiki site based on your Obsidian Vault. Documentation Owlly Seed (My Blog ; In French) The plugins can be accessed with a github actions and a Obsidian\u2019s plugin. Main links \u00b6 Obsidian Plugin Template Support \u00b6 Wikilinks ( [[Links]] ) File transclusion/embed, both wikilinks and markdown links Obsidian callout and custom callout Folder notes and their citation Custom attributes Sharing state and custom folder hierarchy. Mobile and desktop File mini preview on Hover Github actions & Obsidian\u2019s plugin \u00b6 TLDR \u00b6 Install the plugins through Obsidian Community or BRAT Template the blog and configure it Configure the plugin\u2019s options : Repo name Your github username The github token ( from here ) The share key Add the sharing key in true in Obsidian\u2019s note frontmatter Customize (or not) the folder options Run the commands throught the file menu or commands palette. See here for advanced configuration within obsidian Using terminal commands \u00b6 Deprecated Prerequisites \u00b6 You need : Git and a Github Account Python Optional (Windows) : Windows Terminal TLDR \u00b6 Install / update with pip install obs2mk --upgrade Template the blog, clone it and configure the blog. Configure the script (first run) Add share: true in Obsidian\u2019s note frontmatter Customize the category key in Obsidian\u2019s note frontmatter Run the script obs2mk Quick blog installation tutorial \u00b6 Click on use this template 1 Use the name of your choice. Click on code \u2192 SSH ; Copy the link Run (in terminal): git clone [[ PASTE THE LINK HERE ]] publish_blog pip install -r requirements.txt Also, don\u2019t forget to configure GitHub to allow push! Check here for information about setting-up Git! You must be connected to copy the template ! You can test locally through clone > https : git clone https://github.com/Mara-Li/mkdocs_obsidian_template.git or with downloading the ZIP \u21a9","title":"Index"},{"location":"#main-links","text":"Obsidian Plugin Template","title":"Main links"},{"location":"#support","text":"Wikilinks ( [[Links]] ) File transclusion/embed, both wikilinks and markdown links Obsidian callout and custom callout Folder notes and their citation Custom attributes Sharing state and custom folder hierarchy. Mobile and desktop File mini preview on Hover","title":"Support"},{"location":"#github-actions-obsidians-plugin","text":"","title":"Github actions &amp; Obsidian's plugin"},{"location":"#tldr","text":"Install the plugins through Obsidian Community or BRAT Template the blog and configure it Configure the plugin\u2019s options : Repo name Your github username The github token ( from here ) The share key Add the sharing key in true in Obsidian\u2019s note frontmatter Customize (or not) the folder options Run the commands throught the file menu or commands palette. See here for advanced configuration within obsidian","title":"TLDR"},{"location":"#using-terminal-commands","text":"Deprecated","title":"Using terminal commands"},{"location":"#prerequisites","text":"You need : Git and a Github Account Python Optional (Windows) : Windows Terminal","title":"Prerequisites"},{"location":"#tldr_1","text":"Install / update with pip install obs2mk --upgrade Template the blog, clone it and configure the blog. Configure the script (first run) Add share: true in Obsidian\u2019s note frontmatter Customize the category key in Obsidian\u2019s note frontmatter Run the script obs2mk","title":"TLDR"},{"location":"#quick-blog-installation-tutorial","text":"Click on use this template 1 Use the name of your choice. Click on code \u2192 SSH ; Copy the link Run (in terminal): git clone [[ PASTE THE LINK HERE ]] publish_blog pip install -r requirements.txt Also, don\u2019t forget to configure GitHub to allow push! Check here for information about setting-up Git! You must be connected to copy the template ! You can test locally through clone > https : git clone https://github.com/Mara-Li/mkdocs_obsidian_template.git or with downloading the ZIP \u21a9","title":"Quick blog installation tutorial"},{"location":"Obsidian%20Github%20Publisher/","text":"FR \ud83c\uddeb\ud83c\uddf7 What the plugin do Configuration \u27a1\ufe0f Configuration example GitHub Download configuration Folder reception settings. Metadata frontmatter Fixed folder Obsidian Path Workflow Auto clean-up Links\u2019 conversion Index & folder note Internal links Wikilinks to markdown link Embed Plugin settings \ud83e\udd16 Developping General Translation GitHub Publisher is a plugin that help you to send file in a configured GitHub Repository, based on a front matter entry state. You can use it to send any markdown file, allowing compatibility thought a lot of Obsidian Publish alternative. When a shared file is found, it will be sent in a new branch named by your_vault_name-month-day-year . A pull request followed by a merge will be done, and if everything is okay, the branch will be deleted after the merge. Thus, you can easily revert commit, and create workflow based on PR, merged PR, specific push\u2026 What the plugin do \u00b6 Read the frontmatter to check the value of a configured share key. Send the file (and their embedded image or notes if any) to a GitHub repository But the plugin can do a lot more ! Convert wikilinks to markdown links (without changing your file) Activate a GitHub action that have a workflow_dispatche event. Convert internal\u2019s links to match the configuration Clean your repo with removing deleted and unshared files Rename folder note with same name strategies with index.md (+ respecting the folder settings) Send a link\u2019s note in your clipboard after sharing. Convert simple dataview query in markdown ! Configuration \u00b6 To use the plugin, you need to fill the correct information to allow the workflow. \u27a1\ufe0f Configuration example \u00b6 You will find here configuration example for some Obsidian Publish alternative, as Obsidian Mkdocs Publisher and TuanManhCao Digital Garden . Adding configuration You can send me or do a pullrequest to add new configuration for any Obsidian free publish alternative. GitHub \u00b6 Repo name: The repository where the files will be sent. GitHub username: Your username. GitHub Token: Get your GitHub Token here 2 . The correct settings should already be applied. If you want to avoid generating this every few months, select the \u201cNo expiration\u201d option. Click the \u201cGenerate token\u201d button, and copy the token you are presented with on the next page. Download configuration \u00b6 Folder reception settings. \u00b6 You have two options : Use a \u201cfixed\u201d folder : Every file will be sent in this folder. Use a folder created based on a category key. Use the relative path from obsidian. You can prepend a folder using the default folder. You need, in all case, to configure the default folder : The file will be sent here. If you use the option for frontmatter, this folder will be the default folder : the file will be sent here if the key doesn\u2019t exist. Metadata frontmatter \u00b6 Using the second option will activate two more options : Front matter key: The key you want to use in your file. Root folder : To prepend a path before the category key found (if any key are found!) Example You use category in a file with category: Roleplay/Characters/DND You set a root folder with _docs/pages And you set a default folder on _docs/draft The final path (in GitHub!) will be : _docs/pages/Roleplay/Characters/DND But, if you don\u2019t set category , the path will be _docs/draft Fixed folder \u00b6 Every file will be sent in the default folder. If you leave the default folder blank, it will be sent in the root of the repository. Example If you set source for the default folder, any file will be sent in your_repo/source , whatever is their frontmatter key or their relative path. If you leave it blank, it will be sent in your_repo directly. Obsidian Path \u00b6 It uses the relative path in your Obsidian vault. The default folder will be prepended before the relative obsidian path. You can leave it blank to use the root repository. Example For a file in 20. Compendium/DND/Monster If you set source : the final path will be source/20. Compendium/DND/Monster If you leave the default folder blank, the final path will be 20. Compendium/DND/Monster The path removing allow you to remove part of the path created, to, for example, sync subfolder. If the removed path is not found, the normal behavior apply. Sync subfolder You can using this option to designate a subfolder as the \u201cvault\u201d for syncing the repository. You could plug in vault/sub as the path removed. The sync will flow vault/sub as repo . A file in vault/sub/folderA will be sync in repo/folderA Workflow \u00b6 If your workflow needs to activate a GitHub actions, set the name here. Leave it blank to disable the GitHub actions activation. Auto clean-up \u00b6 You can also set up an \u201cauto-delete\u201d when you use the commands to delete files: Deleted from your vault Which you have stopped sharing This option will also add a new command to delete file (without sharing new file). Warning 1 You can\u2019t use the delete command if you don\u2019t have set a default folder (and a root folder if you use the YAML configuration) Also, you can lost some files using this commands, so be careful! Don\u2019t forget that you can revert commit in case the plugin delete a file you don\u2019t want to delete. Changing the option In case you change the folder configuration, the precedent file won\u2019t be deleted and result of a error of this workflow\u2019s part. Be careful! You can set the path of the folder you want to avoid deleting the file. Separate folders a comma. Regex are not supported here! Finally, to prevent deleting index created outside of obsidian, you could use some parameters in your front matter : autoclean: false index: true Or removing the share key. Links\u2019 conversion \u00b6 These settings won\u2019t change your file\u2019s content in your vault Index & folder note \u00b6 Some publishing solution support folder note, but these note need to be named index . In case you use Folder Note with the same name strategies you will have a problem, no? By chance, I have a solution for you, guys! Now, the plugin will convert these file into index if you activate the settings. Here some examples of renaming, using the different parameters from the default folder. Note : This option doesn\u2019t work for Obsidian Path + Same name strategies outside of folder. frontmatter example with a file named folder2 Using a category value : folder1/folder2 With root value named docs \u21d2 docs/folder1/folder2/index.md Without root : folder1/folder2/index.md Without category value, with default folder named drafts : draft/folder2.md (the name won\u2019t be converted!) Example with Obsidian Path & a file named folder2 With a path like : folder1/folder2 the new path will be : If you use a default folder named docs : docs/folder1/folder2/index.md Without : folder1/folder2/index.md This option doesn\u2019t work with fixed folder. Internal links \u00b6 This option will convert the internal links (including image links!) of the shared file to match the relative file in your repo. Only existant and shared file will be converted. Example Cited file : docs/XX/YY/my_file.md File to convert : docs/XX/ZZ/new_file.md Path created : ../YY/my_file.md Wikilinks to markdown link \u00b6 In case you use wikilinks as daily but your obsidian publish solution doesn\u2019t support it, you can use this settings to convert the wiki to md link. Embed \u00b6 You can choose to send embeded files : Images : The image will be copied in the repository in an optionnaly settled folder. Notes : Only shared files will be copied in the repository, in their respected folder (following your settings). Plugin settings \u00b6 You can configure : The share key used by the plugin. By default, it is share Folder excluded. The share key can\u2019t work here. Useful if you forget to remove the share (or turn it to false ) and move a file in your archive\u2026 Add the command to share the file on the file menu (right-click on a file in the explorer or using the three dot) and editor menu (right-click on an opened edited note) Added the link\u2019s shared note in your clipboard after sharing. You can configure the path created here, with removing some part. As it supports multiple part, you can separate the part using comma. For example, you can remove docs and the extension using : docs/, .md The right-click menu command can also send the file under your cursor if it\u2019s a link! \ud83e\udd16 Developping \u00b6 General \u00b6 You can help me to develop the plugin using npm ! First clone the project on your computer with git clone git@github.com:obsidianPublisher/obsidian-github-publisher.git cd obsidian-github-publisher npm install Enjoy! Some notes: I use Conventional Commit to generate the commit message, so please respect the format! To forget to documents your function! Translation \u00b6 Using i18n , you can translate the plugin. To add a new language : Clone the i18n/locales/en-us.ts and rename it to your langage. Get your locale language from Obsidian using obsidian translation or using the commands (in templater for example) : <% tp.obsidian.moment.locale() %> Translate the file and save it. In i18n/index.ts : Import the new file as `import language from \u2018.locales/language\u2019 add the new language in the localeMap json object: { \"language\": language } Additionnaly, you can test if your translation is okay. Create a PR to add your translation! If you find this plugin and workflow useful, you can give me some coffee money. Only file supported by Obsidian will be deleted. \u21a9 Obviously, you need to be connected and have a GitHub account to create this token! \u21a9","title":"Index.md"},{"location":"Obsidian%20Github%20Publisher/#what-the-plugin-do","text":"Read the frontmatter to check the value of a configured share key. Send the file (and their embedded image or notes if any) to a GitHub repository But the plugin can do a lot more ! Convert wikilinks to markdown links (without changing your file) Activate a GitHub action that have a workflow_dispatche event. Convert internal\u2019s links to match the configuration Clean your repo with removing deleted and unshared files Rename folder note with same name strategies with index.md (+ respecting the folder settings) Send a link\u2019s note in your clipboard after sharing. Convert simple dataview query in markdown !","title":"What the plugin do"},{"location":"Obsidian%20Github%20Publisher/#configuration","text":"To use the plugin, you need to fill the correct information to allow the workflow.","title":"Configuration"},{"location":"Obsidian%20Github%20Publisher/#configuration-example","text":"You will find here configuration example for some Obsidian Publish alternative, as Obsidian Mkdocs Publisher and TuanManhCao Digital Garden . Adding configuration You can send me or do a pullrequest to add new configuration for any Obsidian free publish alternative.","title":"\u27a1\ufe0f Configuration example"},{"location":"Obsidian%20Github%20Publisher/#github","text":"Repo name: The repository where the files will be sent. GitHub username: Your username. GitHub Token: Get your GitHub Token here 2 . The correct settings should already be applied. If you want to avoid generating this every few months, select the \u201cNo expiration\u201d option. Click the \u201cGenerate token\u201d button, and copy the token you are presented with on the next page.","title":"GitHub"},{"location":"Obsidian%20Github%20Publisher/#download-configuration","text":"","title":"Download configuration"},{"location":"Obsidian%20Github%20Publisher/#folder-reception-settings","text":"You have two options : Use a \u201cfixed\u201d folder : Every file will be sent in this folder. Use a folder created based on a category key. Use the relative path from obsidian. You can prepend a folder using the default folder. You need, in all case, to configure the default folder : The file will be sent here. If you use the option for frontmatter, this folder will be the default folder : the file will be sent here if the key doesn\u2019t exist.","title":"Folder reception settings."},{"location":"Obsidian%20Github%20Publisher/#metadata-frontmatter","text":"Using the second option will activate two more options : Front matter key: The key you want to use in your file. Root folder : To prepend a path before the category key found (if any key are found!) Example You use category in a file with category: Roleplay/Characters/DND You set a root folder with _docs/pages And you set a default folder on _docs/draft The final path (in GitHub!) will be : _docs/pages/Roleplay/Characters/DND But, if you don\u2019t set category , the path will be _docs/draft","title":"Metadata frontmatter"},{"location":"Obsidian%20Github%20Publisher/#fixed-folder","text":"Every file will be sent in the default folder. If you leave the default folder blank, it will be sent in the root of the repository. Example If you set source for the default folder, any file will be sent in your_repo/source , whatever is their frontmatter key or their relative path. If you leave it blank, it will be sent in your_repo directly.","title":"Fixed folder"},{"location":"Obsidian%20Github%20Publisher/#obsidian-path","text":"It uses the relative path in your Obsidian vault. The default folder will be prepended before the relative obsidian path. You can leave it blank to use the root repository. Example For a file in 20. Compendium/DND/Monster If you set source : the final path will be source/20. Compendium/DND/Monster If you leave the default folder blank, the final path will be 20. Compendium/DND/Monster The path removing allow you to remove part of the path created, to, for example, sync subfolder. If the removed path is not found, the normal behavior apply. Sync subfolder You can using this option to designate a subfolder as the \u201cvault\u201d for syncing the repository. You could plug in vault/sub as the path removed. The sync will flow vault/sub as repo . A file in vault/sub/folderA will be sync in repo/folderA","title":"Obsidian Path"},{"location":"Obsidian%20Github%20Publisher/#workflow","text":"If your workflow needs to activate a GitHub actions, set the name here. Leave it blank to disable the GitHub actions activation.","title":"Workflow"},{"location":"Obsidian%20Github%20Publisher/#auto-clean-up","text":"You can also set up an \u201cauto-delete\u201d when you use the commands to delete files: Deleted from your vault Which you have stopped sharing This option will also add a new command to delete file (without sharing new file). Warning 1 You can\u2019t use the delete command if you don\u2019t have set a default folder (and a root folder if you use the YAML configuration) Also, you can lost some files using this commands, so be careful! Don\u2019t forget that you can revert commit in case the plugin delete a file you don\u2019t want to delete. Changing the option In case you change the folder configuration, the precedent file won\u2019t be deleted and result of a error of this workflow\u2019s part. Be careful! You can set the path of the folder you want to avoid deleting the file. Separate folders a comma. Regex are not supported here! Finally, to prevent deleting index created outside of obsidian, you could use some parameters in your front matter : autoclean: false index: true Or removing the share key.","title":"Auto clean-up"},{"location":"Obsidian%20Github%20Publisher/#links-conversion","text":"These settings won\u2019t change your file\u2019s content in your vault","title":"Links' conversion"},{"location":"Obsidian%20Github%20Publisher/#index-folder-note","text":"Some publishing solution support folder note, but these note need to be named index . In case you use Folder Note with the same name strategies you will have a problem, no? By chance, I have a solution for you, guys! Now, the plugin will convert these file into index if you activate the settings. Here some examples of renaming, using the different parameters from the default folder. Note : This option doesn\u2019t work for Obsidian Path + Same name strategies outside of folder. frontmatter example with a file named folder2 Using a category value : folder1/folder2 With root value named docs \u21d2 docs/folder1/folder2/index.md Without root : folder1/folder2/index.md Without category value, with default folder named drafts : draft/folder2.md (the name won\u2019t be converted!) Example with Obsidian Path & a file named folder2 With a path like : folder1/folder2 the new path will be : If you use a default folder named docs : docs/folder1/folder2/index.md Without : folder1/folder2/index.md This option doesn\u2019t work with fixed folder.","title":"Index &amp; folder note"},{"location":"Obsidian%20Github%20Publisher/#internal-links","text":"This option will convert the internal links (including image links!) of the shared file to match the relative file in your repo. Only existant and shared file will be converted. Example Cited file : docs/XX/YY/my_file.md File to convert : docs/XX/ZZ/new_file.md Path created : ../YY/my_file.md","title":"Internal links"},{"location":"Obsidian%20Github%20Publisher/#wikilinks-to-markdown-link","text":"In case you use wikilinks as daily but your obsidian publish solution doesn\u2019t support it, you can use this settings to convert the wiki to md link.","title":"Wikilinks to markdown link"},{"location":"Obsidian%20Github%20Publisher/#embed","text":"You can choose to send embeded files : Images : The image will be copied in the repository in an optionnaly settled folder. Notes : Only shared files will be copied in the repository, in their respected folder (following your settings).","title":"Embed"},{"location":"Obsidian%20Github%20Publisher/#plugin-settings","text":"You can configure : The share key used by the plugin. By default, it is share Folder excluded. The share key can\u2019t work here. Useful if you forget to remove the share (or turn it to false ) and move a file in your archive\u2026 Add the command to share the file on the file menu (right-click on a file in the explorer or using the three dot) and editor menu (right-click on an opened edited note) Added the link\u2019s shared note in your clipboard after sharing. You can configure the path created here, with removing some part. As it supports multiple part, you can separate the part using comma. For example, you can remove docs and the extension using : docs/, .md The right-click menu command can also send the file under your cursor if it\u2019s a link!","title":"Plugin settings"},{"location":"Obsidian%20Github%20Publisher/#developping","text":"","title":"\ud83e\udd16 Developping"},{"location":"Obsidian%20Github%20Publisher/#general","text":"You can help me to develop the plugin using npm ! First clone the project on your computer with git clone git@github.com:obsidianPublisher/obsidian-github-publisher.git cd obsidian-github-publisher npm install Enjoy! Some notes: I use Conventional Commit to generate the commit message, so please respect the format! To forget to documents your function!","title":"General"},{"location":"Obsidian%20Github%20Publisher/#translation","text":"Using i18n , you can translate the plugin. To add a new language : Clone the i18n/locales/en-us.ts and rename it to your langage. Get your locale language from Obsidian using obsidian translation or using the commands (in templater for example) : <% tp.obsidian.moment.locale() %> Translate the file and save it. In i18n/index.ts : Import the new file as `import language from \u2018.locales/language\u2019 add the new language in the localeMap json object: { \"language\": language } Additionnaly, you can test if your translation is okay. Create a PR to add your translation! If you find this plugin and workflow useful, you can give me some coffee money. Only file supported by Obsidian will be deleted. \u21a9 Obviously, you need to be connected and have a GitHub account to create this token! \u21a9","title":"Translation"},{"location":"Obsidian%20Github%20Publisher/Configuration%20example/","text":"Mkdocs Publisher \u00b6 Quick installation tutorial \u00b6 Click on use this template 1 Use the name of your choice Set and edit the configuration.yml in the root of the repository. Plugin configuration \u00b6 Folder reception settings : Reception settings : YAML frontmatter Default folder : docs/notes Choose your frontmatter key: category (you can change it!) Root folder : docs Links conversion - [x] Folder note - [x] Internal links - [ ] Wikilinks (the template support them by default!) Embed - [x] Image - [x] Embedded notes - Default folder : docs/assets/images Github Workflow Leave blank the GitHub actions Auto-clean up Excluded folder : docs/assets/logo, docs/assets/js, docs/assets/css, docs/tags.md 3 Embed settings : Image Embed notes Choose docs/assets/img \u2705 Folder notes The files (and the images) will be sent on your GitHub repository template, in the specified folder. Useful informations \u00b6 Links \u00b6 Obsidian Plugin Template How to\u2026 \u00b6 Configure the blog Customize the blog Copy the link ? Update the template Support \u00b6 Wikilinks ( [[Links]] ) File transclusion/embed, both wikilinks and markdown links Obsidian callout and custom callout Folder notes and their citation Custom attributes Sharing state and custom folder hierarchy. Mobile and desktop File mini preview on Hover Limitations \u00b6 Digital Garden \u00b6 Folder reception settings : Reception settings : Obsidian Path Default folder : posts Workflow : Leave blank Turn on autoclean Images settings : Transfer embed image on true Transfer embedded notes on false Default folder : posts/Attachments You must be connected to copy the template ! You can test locally through clone > https : git clone https://github.com/Mara-Li/mkdocs_obsidian_template.git or with downloading the ZIP \u21a9 You need to be connected to generate it. \u21a9 Normally, only file supported by obsidian are deleted, but some image exists only on the blog (for logo, for example). To prevent bad surprise, exclude these folder here. \u21a9","title":"Configuration example.md"},{"location":"Obsidian%20Github%20Publisher/Configuration%20example/#mkdocs-publisher","text":"","title":"Mkdocs Publisher"},{"location":"Obsidian%20Github%20Publisher/Configuration%20example/#quick-installation-tutorial","text":"Click on use this template 1 Use the name of your choice Set and edit the configuration.yml in the root of the repository.","title":"Quick installation tutorial"},{"location":"Obsidian%20Github%20Publisher/Configuration%20example/#plugin-configuration","text":"Folder reception settings : Reception settings : YAML frontmatter Default folder : docs/notes Choose your frontmatter key: category (you can change it!) Root folder : docs Links conversion - [x] Folder note - [x] Internal links - [ ] Wikilinks (the template support them by default!) Embed - [x] Image - [x] Embedded notes - Default folder : docs/assets/images Github Workflow Leave blank the GitHub actions Auto-clean up Excluded folder : docs/assets/logo, docs/assets/js, docs/assets/css, docs/tags.md 3 Embed settings : Image Embed notes Choose docs/assets/img \u2705 Folder notes The files (and the images) will be sent on your GitHub repository template, in the specified folder.","title":"Plugin configuration"},{"location":"Obsidian%20Github%20Publisher/Configuration%20example/#useful-informations","text":"","title":"Useful informations"},{"location":"Obsidian%20Github%20Publisher/Configuration%20example/#links","text":"Obsidian Plugin Template","title":"Links"},{"location":"Obsidian%20Github%20Publisher/Configuration%20example/#how-to","text":"Configure the blog Customize the blog Copy the link ? Update the template","title":"How to..."},{"location":"Obsidian%20Github%20Publisher/Configuration%20example/#support","text":"Wikilinks ( [[Links]] ) File transclusion/embed, both wikilinks and markdown links Obsidian callout and custom callout Folder notes and their citation Custom attributes Sharing state and custom folder hierarchy. Mobile and desktop File mini preview on Hover","title":"Support"},{"location":"Obsidian%20Github%20Publisher/Configuration%20example/#limitations","text":"","title":"Limitations"},{"location":"Obsidian%20Github%20Publisher/Configuration%20example/#digital-garden","text":"Folder reception settings : Reception settings : Obsidian Path Default folder : posts Workflow : Leave blank Turn on autoclean Images settings : Transfer embed image on true Transfer embedded notes on false Default folder : posts/Attachments You must be connected to copy the template ! You can test locally through clone > https : git clone https://github.com/Mara-Li/mkdocs_obsidian_template.git or with downloading the ZIP \u21a9 You need to be connected to generate it. \u21a9 Normally, only file supported by obsidian are deleted, but some image exists only on the blog (for logo, for example). To prevent bad surprise, exclude these folder here. \u21a9","title":"Digital Garden"},{"location":"Python/","text":"Depreciation notice As the releasing of : Mkdocs Callout Custom tags attributes Obsidian Github Publisher The python package is now deprecated. Please, read the template README to get more information about the plugins. The script\u2019s goal is to move an authorized file (or multiple authorized file) from your Obsidian\u2019s vault to your blog\u2019s repository. It will : Move linked image in docs/assets/img Convert the code block Admonition to material Admonition 1 Convert the Callout Syntax to material Admonition 2 Remove Obsidian\u2019s comments as `` Copy the file in docs or a specific folder structure. Add custom CSS based on markdown attribute or tags ( CM6 Live Preview ; Markdown Attribute and Contextual Typography ). Furthermore, it will also carry : Of the support of Folder Note \u2014 Pagination Indexes Copy a link to the blog converted file (only if one file is converted) Deprecated ; Will don\u2019t be updated and be removed in future version. \u21a9 Support nested callout :D \u21a9","title":"Index.md"},{"location":"Python/configuration%20template/","text":"default : #change the name if you need a new configuration setting configuration : input : #your obsidian vault in absolute path output : #Your mkdocs site in absolute path frontmatter : #change these if you need category : default value : #default folder/category if no category key is present key : #category index : #(i) share : #share convert : admonition : #true or false hashtags : #true or false weblink : #links to your website If you need a new configuration, just copy/paste after the other configuration, without forgetting to change the default to your configuration_name Some explanation here. It\u2019s a YAML file. If you use the script in terminal you need to configure it. No worry! Normally, the script ask you all information. If you need to edit it, the file is in your site-packages/mkdocs_obsidian . You can check this place with: python import mkdocs_obsidian as obs print(obs.__path__[0]) Thus : input : corresponding to your vault, in an absolute path. output : your mkdocs repository folder, in an absolute path. frontmatter : category : default value : The default folder for new notes that don\u2019t have this key in the front matter. key : If you want to change the category key for other things. For example, folder . index : for folder note , citation will be broken, but this key prevents problem! Note, set this to null or empty will disallow the index link conversion. share : if you wish to use another key to authorize the file to be shared. convert : Allow the script to convert some QoL, as hashtags and admonition admonition : True for allow the convertion of callout hashtags : True for tags Update for minimal configuration As of the update to v4.0.2, the script doesn\u2019t need minimal configuration for running with GitHub actions. You can safely deleting it. 4.1 new options The 4.1 version adding a way to disable callout conversion and hashtags. To disable them, you need to add a new part in your workflow: configuration_name : * *old ** {: #old .hash} configuration part convert : admonition : false hashtags : false This work also for minimal configuration. For this, you need the configuration.yml in the root of your repository, with : minimal : convert : admonition : false hashtags : false","title":"Configuration template.md"},{"location":"Python/customization/","text":"You can prevent the script to share file in specific folder, with editing folder list in exclude.yml You can prevent the script to delete some file with editing file list in the same file. You can, also, create some CSS customization with hashtag, with editing docs/assets/css/custom_attributes.css . See Template/customization for some example. Folder note \u00b6 To support the citation and link to these page, you need to use an index key (cf Python/usage ). Some examples of citation and their transformation : In Obsidian In Publish [[Real File\\|(i) Alias]] [[index\\|Alias]] [[Real File\\|(i)]] [[index\\|Real File]] [(i) Alias](Real file) [Alias](index) [(i)](real file) [real file](index)","title":"Customization.md"},{"location":"Python/customization/#folder-note","text":"To support the citation and link to these page, you need to use an index key (cf Python/usage ). Some examples of citation and their transformation : In Obsidian In Publish [[Real File\\|(i) Alias]] [[index\\|Alias]] [[Real File\\|(i)]] [[index\\|Real File]] [(i) Alias](Real file) [Alias](index) [(i)](real file) [real file](index)","title":"Folder note"},{"location":"Python/frontmatter/","text":"The script relies on the front matter of the notes you want to publish. share: true allow publishing the file 1 category 1 to choose where the file will be after conversion ; allowing categorization for the blog. 2 category: false will hide the file from navigation. category: hidden will do the same. category: folder1/folder2/ will move the file in folder2 , under folder1 category: folder1/folder2/filename will rename the file index and allow support of section\u2019s index page update: false prevent to update the file after the first publication description : Add a description to the file (for meta-tag sharing) 3 title : Change the title in the navigation. image : Add an image for meta-tags sharing. 3 It needs to be the name of the file, as image.png . These key can be configured \u21a9 \u21a9 You can customize the folder with Awesome Pages \u21a9 Meta tags are snippets of text that describe a page\u2019s content; the meta tags don\u2019t appear on the page itself, but only in the page\u2019s source code. Meta tags are essentially little content descriptors that help tell search engines what a web page is about. Source \u21a9 \u21a9","title":"Frontmatter.md"},{"location":"Python/ios/","text":"The script support IOS using : a-shell (Free) Pyto ($3 lite version / $10 complete version) 1 Working Copy (Free for student / $19) Warning The option mobile will never push. You need to use Working Copy to push the converted file. You can : Share the entire vault : obs2mk --mobile all --vault Share a specific file, using its name : obs2mk --mobile file \"filename\" . 2 This option can be used especially with Shortcuts Using Pyto you need to add the writing authorization for your vault and blog repository. You can access it in parameters > Runtime. \u21a9 Beware, if it exists a file with the same name, it will take the first found. \u21a9","title":"Ios.md"},{"location":"Python/obsidian%20shell/","text":"You could create : A command to publish everything : alias Publish with obs2mk --obsidian A command to publish one specific file : alias Publish {{title}} with obs2mk --obsidian file {{file_path:absolute}} Event shortcuts for file menu event : Publish {{event_file_name}} : obs2mk --obsidian file \"{{event_file_path:absolute}} Folder Note event (folder menu event): Publish {{event_folder_name}} : obs2mk --obsidian file \"{{event_folder_path:relative}}\\{{event_folder_name}}.md\" You can create a button with : Customizable Sidebar Obsidian Customizable Menu","title":"Obsidian shell.md"},{"location":"Python/usage/","text":"The script can be use : Directly in Obsidian, using Obsidian Shell Commands (see Obsidian shell configuration ) In a terminal . The supported system are : macOS, Linux and Windows IOS (with Pyto and/or a-shell with Working Copy ) Script\u2019s Configuration \u00b6 At the first run, you will be asked to configure some key and specific path. Vault : Use the file dialog to choose your vault folder. Publish repository folder : As vault path, use the file dialog. share : You can change the share key. By default, it\u2019s share Index key: Support for citation of pagination index pages . By default, it uses (i) Default blog folder: By default, the notes will be in docs/notes but you can change that, or use / for root. Commands \u00b6 Global options : --git : No commit and push to git ; --mobile : Use mobile shortcuts instead of --git --meta : Update frontmatter of source files --keep : Don\u2019t delete files in blog folder --shell : Remove Rich printing Commands and specific options : config : ( it will ignore --use configuration_name ) --new configuration_name : Create a specific configuration for some files all : Share all vault --force : Force updating (ignore the difference between the source and blog file) --vault : Share all vault file, ignoring the share state. file [file] : Share only one file usage: __main__.py [ -h ] [ --mobile | --git ] [ --meta ] [ --keep ] [ --use configuration_name ] { config,all,file } ... positional arguments: { config,all,file } config Configure the script : Add or edit your vault and blog absolute path, change some keys. all Publish multiple files file Publish only one file options: -h, --help show this help message and exit --mobile, --shortcuts Use mobile shortcuts, without push --git, --g, --G No commit and no push to git --meta, --m, --M Update the frontmatter of the source file, adding the note blog ' s link --keep, --k, --K Keep deleted file from vault and removed shared file --use configuration_name, --config configuration_name Use a different config from default The commands order is : obs2mk (global_options) [all|config|file FILEPATH] (specific_options) Where : Global and specific options are optional all , config and file 1 are required You can use the command without argument with obs2mk to share every share: true file in your vault. Share one file : obs2mk file FILEPATH \u00b6 It will : Update the share state in original file Convert one file, regardless of what is the share state. Share all file : obs2mk all or obs2mk \u00b6 You can share multiple documents at once with scanning your Vault, looking for the share: true . It will convert automatically these files. Only file with modification since the last sharing will be updated. You can : Share entirely your vault (that\u2019s ignore the share state) with : obs2mk all --vault Ignore the difference between the source file and the blog\u2019s file with : obs2mk all --force Also, you can combine the two options. Multiple configurations \u00b6 You can use and create multiple configuration files. This allows to have multiple site based on one vault, or different vault accross one site\u2026 To create a new configuration file : obs2mk config --new configuration_name To use a configuration use : --use configuration_name For example : obs2mk --use configuration_name See configuration template for more information about the configuration file. Navigation \u00b6 Obsidian Plugin Python package Template For file you need to add the filepath of the file you want to share : obs2mk (global_option) file \"filepath\" (specific_options) \u21a9","title":"Usage.md"},{"location":"Python/usage/#scripts-configuration","text":"At the first run, you will be asked to configure some key and specific path. Vault : Use the file dialog to choose your vault folder. Publish repository folder : As vault path, use the file dialog. share : You can change the share key. By default, it\u2019s share Index key: Support for citation of pagination index pages . By default, it uses (i) Default blog folder: By default, the notes will be in docs/notes but you can change that, or use / for root.","title":"Script's Configuration"},{"location":"Python/usage/#commands","text":"Global options : --git : No commit and push to git ; --mobile : Use mobile shortcuts instead of --git --meta : Update frontmatter of source files --keep : Don\u2019t delete files in blog folder --shell : Remove Rich printing Commands and specific options : config : ( it will ignore --use configuration_name ) --new configuration_name : Create a specific configuration for some files all : Share all vault --force : Force updating (ignore the difference between the source and blog file) --vault : Share all vault file, ignoring the share state. file [file] : Share only one file usage: __main__.py [ -h ] [ --mobile | --git ] [ --meta ] [ --keep ] [ --use configuration_name ] { config,all,file } ... positional arguments: { config,all,file } config Configure the script : Add or edit your vault and blog absolute path, change some keys. all Publish multiple files file Publish only one file options: -h, --help show this help message and exit --mobile, --shortcuts Use mobile shortcuts, without push --git, --g, --G No commit and no push to git --meta, --m, --M Update the frontmatter of the source file, adding the note blog ' s link --keep, --k, --K Keep deleted file from vault and removed shared file --use configuration_name, --config configuration_name Use a different config from default The commands order is : obs2mk (global_options) [all|config|file FILEPATH] (specific_options) Where : Global and specific options are optional all , config and file 1 are required You can use the command without argument with obs2mk to share every share: true file in your vault.","title":"Commands"},{"location":"Python/usage/#share-one-file-obs2mk-file-filepath","text":"It will : Update the share state in original file Convert one file, regardless of what is the share state.","title":"Share one file : obs2mk file FILEPATH"},{"location":"Python/usage/#share-all-file-obs2mk-all-or-obs2mk","text":"You can share multiple documents at once with scanning your Vault, looking for the share: true . It will convert automatically these files. Only file with modification since the last sharing will be updated. You can : Share entirely your vault (that\u2019s ignore the share state) with : obs2mk all --vault Ignore the difference between the source file and the blog\u2019s file with : obs2mk all --force Also, you can combine the two options.","title":"Share all file : obs2mk all or obs2mk"},{"location":"Python/usage/#multiple-configurations","text":"You can use and create multiple configuration files. This allows to have multiple site based on one vault, or different vault accross one site\u2026 To create a new configuration file : obs2mk config --new configuration_name To use a configuration use : --use configuration_name For example : obs2mk --use configuration_name See configuration template for more information about the configuration file.","title":"Multiple configurations"},{"location":"Python/usage/#navigation","text":"Obsidian Plugin Python package Template For file you need to add the filepath of the file you want to share : obs2mk (global_option) file \"filepath\" (specific_options) \u21a9","title":"Navigation"},{"location":"Python/workflows/","text":"On push \u00b6 The main workflow is in ci.yml . It needs a push event where the commit name starts with [PUBLISHER] . After that, it will scan the repository and try to find modified file (since the last commit). After find these file, it will convert it using obs2mk, and build the mkdocs site. Manual run \u00b6 You can also run manually the convertor using Publisher Manual (in the manual_run.yml ). Tutorial to manually trigger the workflow using Github.com First, go to Actions You will see the list of the actions on your repository. Click on publisher manual . Click on run workflow The run ask you for the file(s) you want to convert. You can convert multiple files using a glob pattern , like a folder or commune name. Each markdown file found will be converted by obs2mk . Note that you can also trigger the workflow using Github CLI using gh workflow run manual_run.yml file=your_file If you want to have the last message with your mkdocs page, you need to edit the .github/env.txt with the link to your page.","title":"Workflows.md"},{"location":"Python/workflows/#on-push","text":"The main workflow is in ci.yml . It needs a push event where the commit name starts with [PUBLISHER] . After that, it will scan the repository and try to find modified file (since the last commit). After find these file, it will convert it using obs2mk, and build the mkdocs site.","title":"On push"},{"location":"Python/workflows/#manual-run","text":"You can also run manually the convertor using Publisher Manual (in the manual_run.yml ). Tutorial to manually trigger the workflow using Github.com First, go to Actions You will see the list of the actions on your repository. Click on publisher manual . Click on run workflow The run ask you for the file(s) you want to convert. You can convert multiple files using a glob pattern , like a folder or commune name. Each markdown file found will be converted by obs2mk . Note that you can also trigger the workflow using Github CLI using gh workflow run manual_run.yml file=your_file If you want to have the last message with your mkdocs page, you need to edit the .github/env.txt with the link to your page.","title":"Manual run"},{"location":"Template/","text":"Configuration \u00b6 Mkdocs configuration \u00b6 In your new publish_blog folder, you will spot a mkdocs.yml . This file allows you to customize your blog! The most important to edit : site_name site_description site_url (critical) : By default, it\u2019s https://github_username.io/repo_name 1 To edit the logo and the favicon, first put the chosen file in assets/logo , and change logo and favicon : logo: assets/logo/logo_name.png favicon: assets/logo/favicon.png You can customize : Font Color scheme, palette, icons Language Check the documentation to get more information You don\u2019t need to touch anything in features ; markdown_extensions\u2026 Plugins \u00b6 The mkdocs.yml also contains the configuration for Mkdocs Plugin . If you add plugin, you need to add it to your requirements.txt because the build use it to construct the blog. I included : Ezlinks (from mkdocs-ezlinked-plugin) : to support directly wikilinks Mermaid2 Awesome pages Tooltipster-links (from mkdocs-preview-links-plugin) Embed File , to support embedding file as in Obsidian (with the ![](file) or ![[file]] syntax) Git revision date localized , to add a date listing Mkdocs Simple Hooks , to allow creating simple python script for mkdocs (including jinja template editing!). Mkdocs Encrypt Contents will allow you to \u201chide\u201d file in the site. See here for more information. Mkdocs Callout Custom tags attributes Superfences & dataviewjs You will spot that I added a custom fences for dataviewjs. Sorry, dataviewjs is not currently supported by mkdocs nor Obsidian Publisher. This custom fences will hide every dataviewjs block. It will, so, prevent display stange block in your markdown file. If you need to display it as code, change the language (like js for example). Oh no, a bug! \u00b6 The blog will be published through GitHub Page using the gh-page branch. I have the readme in place of my files! Check the gh-pages branch and activate it if necessary in Settings \u2192 Pages The workflow doesn\u2019t run! Check the run and error in Actions Check if the actions have the good write and read access in settings \u2192 Actions \u2192 General \u2192 workflow permission In case of worfklow problem In the issue 4 , we discover that sometimes, Github Actions refuse to run without reason. If this happend to you, please, contact the Github Support! Local testing ( optional ) \u00b6 To run locally the blog, you need to install the requirements and run mkdocs serve . cd publish_blog pip install -r requirements.txt mkdocs serve A little advice here : You could use a conda environment here (or a venv, but I don\u2019t like venv.). Just use this: conda create -n Publisher python = 3 .10.4 conda activate Publisher Just before the pip install ! Main Repo Obsidian Plugin Python package Template Documentation You can found the link in Repository settings > Pages. \u21a9","title":"Configuration"},{"location":"Template/#configuration","text":"","title":"Configuration"},{"location":"Template/#mkdocs-configuration","text":"In your new publish_blog folder, you will spot a mkdocs.yml . This file allows you to customize your blog! The most important to edit : site_name site_description site_url (critical) : By default, it\u2019s https://github_username.io/repo_name 1 To edit the logo and the favicon, first put the chosen file in assets/logo , and change logo and favicon : logo: assets/logo/logo_name.png favicon: assets/logo/favicon.png You can customize : Font Color scheme, palette, icons Language Check the documentation to get more information You don\u2019t need to touch anything in features ; markdown_extensions\u2026","title":"Mkdocs configuration"},{"location":"Template/#plugins","text":"The mkdocs.yml also contains the configuration for Mkdocs Plugin . If you add plugin, you need to add it to your requirements.txt because the build use it to construct the blog. I included : Ezlinks (from mkdocs-ezlinked-plugin) : to support directly wikilinks Mermaid2 Awesome pages Tooltipster-links (from mkdocs-preview-links-plugin) Embed File , to support embedding file as in Obsidian (with the ![](file) or ![[file]] syntax) Git revision date localized , to add a date listing Mkdocs Simple Hooks , to allow creating simple python script for mkdocs (including jinja template editing!). Mkdocs Encrypt Contents will allow you to \u201chide\u201d file in the site. See here for more information. Mkdocs Callout Custom tags attributes Superfences & dataviewjs You will spot that I added a custom fences for dataviewjs. Sorry, dataviewjs is not currently supported by mkdocs nor Obsidian Publisher. This custom fences will hide every dataviewjs block. It will, so, prevent display stange block in your markdown file. If you need to display it as code, change the language (like js for example).","title":"Plugins"},{"location":"Template/#oh-no-a-bug","text":"The blog will be published through GitHub Page using the gh-page branch. I have the readme in place of my files! Check the gh-pages branch and activate it if necessary in Settings \u2192 Pages The workflow doesn\u2019t run! Check the run and error in Actions Check if the actions have the good write and read access in settings \u2192 Actions \u2192 General \u2192 workflow permission In case of worfklow problem In the issue 4 , we discover that sometimes, Github Actions refuse to run without reason. If this happend to you, please, contact the Github Support!","title":"Oh no, a bug!"},{"location":"Template/#local-testing-optional","text":"To run locally the blog, you need to install the requirements and run mkdocs serve . cd publish_blog pip install -r requirements.txt mkdocs serve A little advice here : You could use a conda environment here (or a venv, but I don\u2019t like venv.). Just use this: conda create -n Publisher python = 3 .10.4 conda activate Publisher Just before the pip install ! Main Repo Obsidian Plugin Python package Template Documentation You can found the link in Repository settings > Pages. \u21a9","title":"Local testing (optional)"},{"location":"Template/Q%26A/","text":"1. Private repository \u00b6 As I authorize this repo to be a template, it allows you to create a private repository! Note Fork doesn\u2019t allow you to create a private repo, that\u2019s why you must use the template._ 2. Update the template \u00b6 Using a template (in place of fork) prevent to get the update I do sometimes. So, to keep an eye on it, you need to create a branch based on the template. In the cloned folder, (in your blog) do : git remote add Template git@github.com:Mara-Li/obsidian-mkdocs-publisher-template.git git fetch Template git checkout -b template Template/main After, to get the update : git checkout template git pull You can merge the branch, or just get the updated file with the checkout command : git checkout main git checkout template path/file/youwant Don\u2019t forget to commit and push!","title":"Q&A.md"},{"location":"Template/Q%26A/#1-private-repository","text":"As I authorize this repo to be a template, it allows you to create a private repository! Note Fork doesn\u2019t allow you to create a private repo, that\u2019s why you must use the template._","title":"1. Private repository"},{"location":"Template/Q%26A/#2-update-the-template","text":"Using a template (in place of fork) prevent to get the update I do sometimes. So, to keep an eye on it, you need to create a branch based on the template. In the cloned folder, (in your blog) do : git remote add Template git@github.com:Mara-Li/obsidian-mkdocs-publisher-template.git git fetch Template git checkout -b template Template/main After, to get the update : git checkout template git pull You can merge the branch, or just get the updated file with the checkout command : git checkout main git checkout template path/file/youwant Don\u2019t forget to commit and push!","title":"2. Update the template"},{"location":"Template/Within%20Obsidian/","text":"Note The github actions will only convert hashtags and convertion to Admonition mkdocs callouts. Now, two mkdocs plugin handle this, so you don\u2019t need (normally) to use obs2mk in minimal configuration anymore. The plugins are : Mkdocs Callouts Custom Tags Attributes These two plugin will never change the file send in Github, because the edition happend during the page build. The plugin directly edit : Folder note Categorization and custom tree creation If you use your vault directly in a repo, the send will break your files! The script is not for theses strategies. You can delete/disable safely the workflow named ci.yml , manual_run.yml and edit the mkdocs_build.yml to remove the if: line ( at the l18 lines ). Python workflow \u00b6 If you want to continue to rely on the python workflow, read bellow. About same repo & vault If you use your vault directly in a repo, the conversion by Obs2mk will break your files. The script is not for these strategies. Example break: Hashtags : **2022/01**{: #2022/01 .hash} Callout converted to Admonition Mkdocs Callout Your frontmatter Links and internal path Configuration The python script use the minimal configuration, and this configuration can be customized using a file named configuration.yml added in the root repo. Here, you can disable the callout conversion and the hashtags conversion with: minimal : convert : admonition : false hashtags : false Obviously, you can set one true and another false . Note If you disable the two, you don\u2019t need the obs2mk conversion (you will gain a LOT OF TIME for sharing). Just create a workflow on push for building mkdocs page. To do that, just remove the if in the .github/workflow/mkdocs_build.yml file.","title":"Within Obsidian.md"},{"location":"Template/Within%20Obsidian/#python-workflow","text":"If you want to continue to rely on the python workflow, read bellow. About same repo & vault If you use your vault directly in a repo, the conversion by Obs2mk will break your files. The script is not for these strategies. Example break: Hashtags : **2022/01**{: #2022/01 .hash} Callout converted to Admonition Mkdocs Callout Your frontmatter Links and internal path Configuration The python script use the minimal configuration, and this configuration can be customized using a file named configuration.yml added in the root repo. Here, you can disable the callout conversion and the hashtags conversion with: minimal : convert : admonition : false hashtags : false Obviously, you can set one true and another false . Note If you disable the two, you don\u2019t need the obs2mk conversion (you will gain a LOT OF TIME for sharing). Just create a workflow on push for building mkdocs page. To do that, just remove the if in the .github/workflow/mkdocs_build.yml file.","title":"Python workflow"},{"location":"Template/Workflow/","text":"There is a lot of Github Actions here ! First, if you need information on what is a github action : Definition GitHub Actions makes it easy to automate all your software workflows, now with world-class CI/CD. Build, test, and deploy your code right from GitHub. Make code reviews, branch management, and issue triaging work the way you want. 1 I will explain everything, don\u2019t panik. As you can see, here, the github actions (~ the workflow) are used to build Obsidian To Mkdocs (Or Mkdocs Obsidian Publisher) using file in your repo. On push : mkdocs_build.yml The .github/workflows/mkdocs_build.yml file is used to build the mkdocs site. It simply run the installations of the requirements and the commands for building github page. This workflow will run only for the main or master branch, and if the push includes files from: docs requirements.txt README.md overrides mkdocs.yml Each day : update_requirements.yml I created it because the Github Cache needs a fixed version on requirements, but it happens regulary that I update some plugins or update in Material Mkdocs. So, this workflow will only change the requirements.txt if it founds an update. Activated : create_index.yml Allow you to quickly create a new \u201ccategory\u201d / blog listing in your repository, creating a new specified folder with the name of the category. To create a new category, follow the steps below: Go to the \u201cActions tab\u201d Click on \u201cIndex Creation\u201d Click on \u201cRun Workflow\u201d Fill the form : - Folder name : The name of the folder you want to create, it will be the \u201cnew category\u201d. - Parent folder : The optional path of the folder you want to create the new category in. For example, main_category/draft will create the docs/main_category/draft/folder_name folder. - Description : An optional category description. - You can also : Hide the toc in the index file. Hide the navigation panel in the index file. Perform a dry-run : It will only show the result of the operation, but will not create the folder and the index file. You can also create workflow conditional run with the if keyword. For example, each merging event will be prepended by [PUBLISHER] . You could aussi create a workflow based on pullrequest. Using the if keyword Target the merging event name with : if: startsWith(github.event.head_commit.message, '[PUBLISHER]') You can use the keyword if for steps or entire jobs. About workflow run If you use the workflows (every workflow) on a private repository, you needs to know that you have only 2000 minutes (3000 with pro account) of workflow run. Mkdocs Build takes around ~2minutes (more for big repository) Updating requirements (each 24 hours) take ~30s Finally, you can run ~1000 blog\u2019s build by month (1500 for pro), so it\u2019s around 32 build by day. Note : The pip cache will normally accelerate the process, so Publisher action must take more than 1min-1min30 than two for little building. Thanks to official website \u21a9","title":"Workflow.md"},{"location":"Template/customization/","text":"Custom and tags attributes \u00b6 Tags \u00b6 The plugin Custom tags attributes will convert all #tags to **tags**{: #tags .hash} and add custom CSS to it. 2022/01/01 will become **2022/01/01**{: #2022/01 .hash} : #2022/01/01 Inline Markdown attributes \u00b6 You can create Inline Markdown Attribute using hashtags. For example, to align some text to right : Add # right { display : inline-block ; width : 100 % ; text-align : right ; font-weight : normal ; } # blue { color : blue ; } Add #right on the last part of a line, and a #blue on random word : Lorem ipsum dolor sit amet, consectetur adipiscing#blue elit. In mollis, libero porttitor gravida accumsan, justo metus pulvinar nulla, vitae dictum odio ligula non nisl. Vivamus id venenatis nulla. Nullam sed euismod ligula. Pellentesque tempor elit felis, lobortis vulputate risus gravida et. Curabitur auctor sed libero nec consectetur. Nam placerat rhoncus risus, euismod sagittis eros bibendum ac. Maecenas tellus libero, porttitor ac purus sit amet, viverra suscipit dolor. Proin id nisl velit. Ut at tincidunt libero, ac pharetra mi. Integer non luctus nisi.#right It will appear as: Lorem ipsum dolor sit amet, consectetur adipiscing blue elit. In mollis, libero porttitor gravida accumsan, justo metus pulvinar nulla, vitae dictum odio ligula non nisl. Vivamus id venenatis nulla. Nullam sed euismod ligula. Pellentesque tempor elit felis, lobortis vulputate risus gravida et. Curabitur auctor sed libero nec consectetur. Nam placerat rhoncus risus, euismod sagittis eros bibendum ac. Maecenas tellus libero, porttitor ac purus sit amet, viverra suscipit dolor. Proin id nisl velit. Ut at tincidunt libero, ac pharetra mi. Integer non luctus nisi. Note that it can be some strange behavior caused by the functionment of attribute list but it mostly work for majority of use case. You can get more information in the mkdocs-custom-tags-attributes documentation. Folder note \u00b6 You can create a folder note if you use a category front matter key that have the last folder with the same name as the file. For example : category: folder1/folder2/filename . The file filename will be renamed index and the folder will be named filename . If you use folder note in obs2mk without Obsidian Plugin, you need to configure an index key. See here for more information Callout & Admonition \u00b6 The script support custom admonition. For that, you first need to edit or create a new css file, with adding the support of the new custom callout, as follow in Admonition\u2019s docs . For example, to add a dictionnary admonition: : root { --md-admonition-icon--dictionnary : url ( 'data:image/svg+xml;charset=utf-8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18 22a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-6v7L9.5 7.5 7 9V2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12z\"/></svg>' ) } . md-typeset . admonition . dictionnary , . md-typeset details . dictionnary { border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . dictionnary > . admonition-title , . md-typeset . dictionnary > . summary { background-color : rgba ( 43 , 155 , 70 , 0.1 ); border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . dictionnary > . admonition-title :: before , . md-typeset . dictionnary > summary :: before { background-color : rgb ( 43 , 155 , 70 ); -webkit- mask-image : var ( --md-admonition-icon--dictionnary ); mask-image : var ( --md-admonition-icon--dictionnary ); It will give you : Dictionnary Here\u2019s a callout block. It supports markdown and wikilinks The dictionnary will be recognized, and converted ! Article list \u00b6 A new cool way to display your article/post is to use a special template. To organize that you must use : Pagination indexes A index.md file in a folder (\u201ca category\u201d folder). This index is on this form : --- template: blog.html title: Folder Index category: FolderName hidden: True --- A cool description The blog.html use a file in overrides/partials . If you want to hide a file from this list, you can use hidden key in the frontmatter. Plugin The displayed date rely on a new plugin named mkdocs-git-revision-date-localized-plugin . Don\u2019t forget to customize it! To add a illustrative image, you need to add a frontmatter in the file. Internal Image : image: This image must be the image name (+ extension) and placed in assets/img External image: banner: You can also use the github action create_index to create a new index for a new folder. For more information see Workflow","title":"Customization.md"},{"location":"Template/customization/#custom-and-tags-attributes","text":"","title":"Custom and tags attributes"},{"location":"Template/customization/#tags","text":"The plugin Custom tags attributes will convert all #tags to **tags**{: #tags .hash} and add custom CSS to it. 2022/01/01 will become **2022/01/01**{: #2022/01 .hash} : #2022/01/01","title":"Tags"},{"location":"Template/customization/#inline-markdown-attributes","text":"You can create Inline Markdown Attribute using hashtags. For example, to align some text to right : Add # right { display : inline-block ; width : 100 % ; text-align : right ; font-weight : normal ; } # blue { color : blue ; } Add #right on the last part of a line, and a #blue on random word : Lorem ipsum dolor sit amet, consectetur adipiscing#blue elit. In mollis, libero porttitor gravida accumsan, justo metus pulvinar nulla, vitae dictum odio ligula non nisl. Vivamus id venenatis nulla. Nullam sed euismod ligula. Pellentesque tempor elit felis, lobortis vulputate risus gravida et. Curabitur auctor sed libero nec consectetur. Nam placerat rhoncus risus, euismod sagittis eros bibendum ac. Maecenas tellus libero, porttitor ac purus sit amet, viverra suscipit dolor. Proin id nisl velit. Ut at tincidunt libero, ac pharetra mi. Integer non luctus nisi.#right It will appear as: Lorem ipsum dolor sit amet, consectetur adipiscing blue elit. In mollis, libero porttitor gravida accumsan, justo metus pulvinar nulla, vitae dictum odio ligula non nisl. Vivamus id venenatis nulla. Nullam sed euismod ligula. Pellentesque tempor elit felis, lobortis vulputate risus gravida et. Curabitur auctor sed libero nec consectetur. Nam placerat rhoncus risus, euismod sagittis eros bibendum ac. Maecenas tellus libero, porttitor ac purus sit amet, viverra suscipit dolor. Proin id nisl velit. Ut at tincidunt libero, ac pharetra mi. Integer non luctus nisi. Note that it can be some strange behavior caused by the functionment of attribute list but it mostly work for majority of use case. You can get more information in the mkdocs-custom-tags-attributes documentation.","title":"Inline Markdown attributes"},{"location":"Template/customization/#folder-note","text":"You can create a folder note if you use a category front matter key that have the last folder with the same name as the file. For example : category: folder1/folder2/filename . The file filename will be renamed index and the folder will be named filename . If you use folder note in obs2mk without Obsidian Plugin, you need to configure an index key. See here for more information","title":"Folder note"},{"location":"Template/customization/#callout-admonition","text":"The script support custom admonition. For that, you first need to edit or create a new css file, with adding the support of the new custom callout, as follow in Admonition\u2019s docs . For example, to add a dictionnary admonition: : root { --md-admonition-icon--dictionnary : url ( 'data:image/svg+xml;charset=utf-8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18 22a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-6v7L9.5 7.5 7 9V2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12z\"/></svg>' ) } . md-typeset . admonition . dictionnary , . md-typeset details . dictionnary { border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . dictionnary > . admonition-title , . md-typeset . dictionnary > . summary { background-color : rgba ( 43 , 155 , 70 , 0.1 ); border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . dictionnary > . admonition-title :: before , . md-typeset . dictionnary > summary :: before { background-color : rgb ( 43 , 155 , 70 ); -webkit- mask-image : var ( --md-admonition-icon--dictionnary ); mask-image : var ( --md-admonition-icon--dictionnary ); It will give you : Dictionnary Here\u2019s a callout block. It supports markdown and wikilinks The dictionnary will be recognized, and converted !","title":"Callout &amp; Admonition"},{"location":"Template/customization/#article-list","text":"A new cool way to display your article/post is to use a special template. To organize that you must use : Pagination indexes A index.md file in a folder (\u201ca category\u201d folder). This index is on this form : --- template: blog.html title: Folder Index category: FolderName hidden: True --- A cool description The blog.html use a file in overrides/partials . If you want to hide a file from this list, you can use hidden key in the frontmatter. Plugin The displayed date rely on a new plugin named mkdocs-git-revision-date-localized-plugin . Don\u2019t forget to customize it! To add a illustrative image, you need to add a frontmatter in the file. Internal Image : image: This image must be the image name (+ extension) and placed in assets/img External image: banner: You can also use the github action create_index to create a new index for a new folder. For more information see Workflow","title":"Article list"},{"location":"Template/limitations/","text":"Limitations \u00b6 Obsiously, no obsidian\u2019s plugin will work. Only obsidian\u2019s plugin provided with an API can be converted, as dataview (converted in simple markdown) for example. No graph view mkdocs and Material Mkdocs doesn\u2019t support inline tags, and you will lose link in these tags. See custom and tags attributes for more information. Nested tags are not supported","title":"Limitations"},{"location":"Template/limitations/#limitations","text":"Obsiously, no obsidian\u2019s plugin will work. Only obsidian\u2019s plugin provided with an API can be converted, as dataview (converted in simple markdown) for example. No graph view mkdocs and Material Mkdocs doesn\u2019t support inline tags, and you will lose link in these tags. See custom and tags attributes for more information. Nested tags are not supported","title":"Limitations"},{"location":"Template/snippets%20and%20tools/","text":"I, as working on my blog, created some cool snippets or useful tools. CSS snippets \u00b6 Grid CSS snippets \u00b6 Automatically convert the grid callout layout (from ITS) to mkdocs Add this to any css from your documentation: : root { --md-admonition-icon--grid : url ( 'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path d=\"M352 432c0 8.836-7.164 16-16 16H176c-8.838 0-16-7.164-16-16V128H48c-26.51 0-48 21.5-48 48v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48v-80H352v48zm-248 7c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30zm0-104c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30zm0-104c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-5 4.03-9 9-9h30c4.969 0 9 4.031 9 9v30zm304 178c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30c0 4.969-4.031 9-9 9h-30c-4.969 0-9-4.031-9-9v-30zM591.1 0h-352c-25.6 0-48 21.49-48 48v256c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V48c.9-26.51-20.6-48-48-48zm-288 64c17.68 0 32 14.33 32 32s-14.32 32-32 32c-16.8 0-32-14.3-32-32s15.2-32 32-32zm271 215.6c-2.8 5.2-8.2 8.4-14.1 8.4H271.1c-6 0-10.6-3.4-13.4-8.7-2.7-5.4-2.2-11.9 1.4-16.7l70-96c3-4.2 7.8-6.6 12-6.6 5.11 0 9.914 2.441 12.93 6.574l22.35 30.66 62.74-94.11C442.1 98.67 447.1 96 453.3 96c5.348 0 10.34 2.672 13.31 7.125l106.7 160c3.29 4.875 3.59 11.175.79 16.475z\"/></svg>' ); } . md-typeset . admonition . grid { box-shadow : none ; } . md-typeset . admonition . grid p : not ( . admonition-title ) { display : flex ; margin-block-start : 0 ; margin-block-end : 0 ; justify-content : center ; } . md-typeset . admonition . grid img { display : table-cell ; vertical-align : middle ; padding : 1 px ; width : 75 % ; height : 75 % ; } Add a image banner to mkdocs \u00b6 You can add a cool image banner with editing utils.css and adding : . md-header { background : var ( --md-primary-fg-color ) url ( image_links ) left center / cover no-repeat ; } Don\u2019t forget to edit the image_link with the real links ! Personnaly, I use a unsplash image. Plugins \u00b6 Note Don\u2019t forget to add the plugin in your requirements.txt Custom fences \u00b6 Bundled with the template Some Obsidian\u2019s plugin use codeblocks to do some things, as Agtable or Table extended To automatically convert these block to markdown, I use a mini plugin I wrote : Mkdocs Custom Fence To use it : Add mkdocs_custom_fences in your requirements Edit the mkdocs.yml as follow : markdow_extensions: pymdownx.superfences: custom_fences: - name: md-render class: md-render format: !!python/name:mkdocs_custom_fences.md_render.md_sub_render For example, for AGtable : - pymdownx.superfences: custom_fences: - name: agtable class: agtable format: !!python/name:mkdocs_custom_fences.md_render.md_sub_render Mkdocs Callouts \u00b6 Bundled with the template Plugin\u2019s info A simple plugin that converts Obsidian style callouts and turns them into mkdocs supported Admonitions. Plugin link : https://pypi.org/project/mkdocs-callouts/ Installation : pip install mkdocs-callouts Use this plugin if you don\u2019t want to use the script (in github actions or in general). It supports \u201ccallouts in callout\u201d, custom callouts\u2026 Page encrypted \u00b6 The basic configuration for Material & this template are already included in the mkdocs.yml and in utils.css Plugin\u2019s info This plugin allows you to have password protected articles and pages in MKdocs. Plugin link : https://pypi.org/project/mkdocs-encryptcontent-plugin/ Installation : pip install mkdocs-encryptcontent-plugin First, configure the display of this plugin for mkdocs with adding this in your css : [ data-md-color-scheme = \"slate\" ] # mkdocs-content-password { background-color : rgba ( 0 , 0 , 0 , 0.11 ) } [ data-md-color-scheme = \"default\" ] # mkdocs-content-password { background-color : white ; } # mkdocs-content-password { border-radius : 5 px ; height : 40 px ; width : 50 % ; padding-left : 10 px ; } # mkdocs-decrypt-button { border-radius : 5 px ; fill : var ( --md-default-fg-color--light ); height : 30 px ; width : 5 % ; } Configure the mkdocs.yml to add the plugin, as follows the README. Example This configuration allow to remember password and use per page password. plugins: - encryptcontent: title_prefix: '\ud83d\udd10 ' summary: 'Private page' placeholder: 'Password' decryption_failure_message: 'Invalid!!' encryption_info_message: \"You don't have access to this page without password\" remember_password: True search_index: 'encrypted' **Material**{: #Material .hash} doesn't support dynamicaly encryption search password_button: True password_button_text: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height=\"1em\" width=\"1em\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M416 32h-64c-17.67 0-32 14.33-32 32s14.33 32 32 32h64c17.67 0 32 14.33 32 32v256c0 17.67-14.33 32-32 32h-64c-17.67 0-32 14.33-32 32s14.33 32 32 32h64c53.02 0 96-42.98 96-96V128C512 74.98 469 32 416 32zM342.6 233.4l-128-128c-12.51-12.51-32.76-12.49-45.25 0c-12.5 12.5-12.5 32.75 0 45.25L242.8 224H32C14.31 224 0 238.3 0 256s14.31 32 32 32h210.8l-73.38 73.38c-12.5 12.5-12.5 32.75 0 45.25s32.75 12.5 45.25 0l128-128C355.1 266.1 355.1 245.9 342.6 233.4z\"/></svg>' But you could also support a full encrypted documentation : plugins: - encryptcontent: global_password: 'your_password' To add a unique page encrypted, just add password: your_secret_password in your markdown file. Security Obviously, if you use this in a public repo, it\u2019s totally useless to add this security (the file can be viewed enterely in GitHub). Don\u2019t use this plugin to share sensible information! Custom tags attributes \u00b6 Bundled with the template Custom tags attribute Adding attribute list using only hashtags in your text. Links: Custom tags attributes Installation: pip install mkdocs-custom-tags-attributes","title":"Snippets and tools"},{"location":"Template/snippets%20and%20tools/#css-snippets","text":"","title":"CSS snippets"},{"location":"Template/snippets%20and%20tools/#grid-css-snippets","text":"Automatically convert the grid callout layout (from ITS) to mkdocs Add this to any css from your documentation: : root { --md-admonition-icon--grid : url ( 'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path d=\"M352 432c0 8.836-7.164 16-16 16H176c-8.838 0-16-7.164-16-16V128H48c-26.51 0-48 21.5-48 48v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48v-80H352v48zm-248 7c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30zm0-104c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30zm0-104c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-5 4.03-9 9-9h30c4.969 0 9 4.031 9 9v30zm304 178c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30c0 4.969-4.031 9-9 9h-30c-4.969 0-9-4.031-9-9v-30zM591.1 0h-352c-25.6 0-48 21.49-48 48v256c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V48c.9-26.51-20.6-48-48-48zm-288 64c17.68 0 32 14.33 32 32s-14.32 32-32 32c-16.8 0-32-14.3-32-32s15.2-32 32-32zm271 215.6c-2.8 5.2-8.2 8.4-14.1 8.4H271.1c-6 0-10.6-3.4-13.4-8.7-2.7-5.4-2.2-11.9 1.4-16.7l70-96c3-4.2 7.8-6.6 12-6.6 5.11 0 9.914 2.441 12.93 6.574l22.35 30.66 62.74-94.11C442.1 98.67 447.1 96 453.3 96c5.348 0 10.34 2.672 13.31 7.125l106.7 160c3.29 4.875 3.59 11.175.79 16.475z\"/></svg>' ); } . md-typeset . admonition . grid { box-shadow : none ; } . md-typeset . admonition . grid p : not ( . admonition-title ) { display : flex ; margin-block-start : 0 ; margin-block-end : 0 ; justify-content : center ; } . md-typeset . admonition . grid img { display : table-cell ; vertical-align : middle ; padding : 1 px ; width : 75 % ; height : 75 % ; }","title":"Grid CSS snippets"},{"location":"Template/snippets%20and%20tools/#add-a-image-banner-to-mkdocs","text":"You can add a cool image banner with editing utils.css and adding : . md-header { background : var ( --md-primary-fg-color ) url ( image_links ) left center / cover no-repeat ; } Don\u2019t forget to edit the image_link with the real links ! Personnaly, I use a unsplash image.","title":"Add a image banner to mkdocs"},{"location":"Template/snippets%20and%20tools/#plugins","text":"Note Don\u2019t forget to add the plugin in your requirements.txt","title":"Plugins"},{"location":"Template/snippets%20and%20tools/#custom-fences","text":"Bundled with the template Some Obsidian\u2019s plugin use codeblocks to do some things, as Agtable or Table extended To automatically convert these block to markdown, I use a mini plugin I wrote : Mkdocs Custom Fence To use it : Add mkdocs_custom_fences in your requirements Edit the mkdocs.yml as follow : markdow_extensions: pymdownx.superfences: custom_fences: - name: md-render class: md-render format: !!python/name:mkdocs_custom_fences.md_render.md_sub_render For example, for AGtable : - pymdownx.superfences: custom_fences: - name: agtable class: agtable format: !!python/name:mkdocs_custom_fences.md_render.md_sub_render","title":"Custom fences"},{"location":"Template/snippets%20and%20tools/#mkdocs-callouts","text":"Bundled with the template Plugin\u2019s info A simple plugin that converts Obsidian style callouts and turns them into mkdocs supported Admonitions. Plugin link : https://pypi.org/project/mkdocs-callouts/ Installation : pip install mkdocs-callouts Use this plugin if you don\u2019t want to use the script (in github actions or in general). It supports \u201ccallouts in callout\u201d, custom callouts\u2026","title":"Mkdocs Callouts"},{"location":"Template/snippets%20and%20tools/#page-encrypted","text":"The basic configuration for Material & this template are already included in the mkdocs.yml and in utils.css Plugin\u2019s info This plugin allows you to have password protected articles and pages in MKdocs. Plugin link : https://pypi.org/project/mkdocs-encryptcontent-plugin/ Installation : pip install mkdocs-encryptcontent-plugin First, configure the display of this plugin for mkdocs with adding this in your css : [ data-md-color-scheme = \"slate\" ] # mkdocs-content-password { background-color : rgba ( 0 , 0 , 0 , 0.11 ) } [ data-md-color-scheme = \"default\" ] # mkdocs-content-password { background-color : white ; } # mkdocs-content-password { border-radius : 5 px ; height : 40 px ; width : 50 % ; padding-left : 10 px ; } # mkdocs-decrypt-button { border-radius : 5 px ; fill : var ( --md-default-fg-color--light ); height : 30 px ; width : 5 % ; } Configure the mkdocs.yml to add the plugin, as follows the README. Example This configuration allow to remember password and use per page password. plugins: - encryptcontent: title_prefix: '\ud83d\udd10 ' summary: 'Private page' placeholder: 'Password' decryption_failure_message: 'Invalid!!' encryption_info_message: \"You don't have access to this page without password\" remember_password: True search_index: 'encrypted' **Material**{: #Material .hash} doesn't support dynamicaly encryption search password_button: True password_button_text: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height=\"1em\" width=\"1em\"><!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --><path d=\"M416 32h-64c-17.67 0-32 14.33-32 32s14.33 32 32 32h64c17.67 0 32 14.33 32 32v256c0 17.67-14.33 32-32 32h-64c-17.67 0-32 14.33-32 32s14.33 32 32 32h64c53.02 0 96-42.98 96-96V128C512 74.98 469 32 416 32zM342.6 233.4l-128-128c-12.51-12.51-32.76-12.49-45.25 0c-12.5 12.5-12.5 32.75 0 45.25L242.8 224H32C14.31 224 0 238.3 0 256s14.31 32 32 32h210.8l-73.38 73.38c-12.5 12.5-12.5 32.75 0 45.25s32.75 12.5 45.25 0l128-128C355.1 266.1 355.1 245.9 342.6 233.4z\"/></svg>' But you could also support a full encrypted documentation : plugins: - encryptcontent: global_password: 'your_password' To add a unique page encrypted, just add password: your_secret_password in your markdown file. Security Obviously, if you use this in a public repo, it\u2019s totally useless to add this security (the file can be viewed enterely in GitHub). Don\u2019t use this plugin to share sensible information!","title":"Page encrypted"},{"location":"Template/snippets%20and%20tools/#custom-tags-attributes","text":"Bundled with the template Custom tags attribute Adding attribute list using only hashtags in your text. Links: Custom tags attributes Installation: pip install mkdocs-custom-tags-attributes","title":"Custom tags attributes"},{"location":"Template/useful%20plugins/","text":"Some useful plugin to support the script : Metacopy Obsidian Shell (cf Obsidian Shell ) Customizable Sidebar Obsidian Customizable Menu Alx Folder Note Custom Attribute : CM6 Live Preview ; Markdown Attribute Contextual Typography Metacopy \u00b6 Using metacopy you can quickly copy a link to a shared page, without using this option (so, yes, the script does not edit your source file !). To create a link, you need to configure : category in key Add your set_url in base link Add category in key link Also, you can remove the metacopy from your file menu using a key, so you can activate metacopy only for share: true . Metacopy also support the folder note . The final configuration of metacopy for mkdocs_obsidian will be : So, in the end, a menu will appear on file with share: true and a category configured. This menu is on the left click and the file-menu. You can quickly copy a link from there, like a Google or notion sharing link! Front matter template \u00b6 title: share: description: category:","title":"Obsidian's useful plugins"},{"location":"Template/useful%20plugins/#metacopy","text":"Using metacopy you can quickly copy a link to a shared page, without using this option (so, yes, the script does not edit your source file !). To create a link, you need to configure : category in key Add your set_url in base link Add category in key link Also, you can remove the metacopy from your file menu using a key, so you can activate metacopy only for share: true . Metacopy also support the folder note . The final configuration of metacopy for mkdocs_obsidian will be : So, in the end, a menu will appear on file with share: true and a category configured. This menu is on the left click and the file-menu. You can quickly copy a link from there, like a Google or notion sharing link!","title":"Metacopy"},{"location":"Template/useful%20plugins/#front-matter-template","text":"title: share: description: category:","title":"Front matter template"},{"location":"notes/","text":"A link to note3","title":"Index.md"},{"location":"notes/note3/","text":"heading 1 \u00b6 Link to ../Python/index Link to ../index subtitle \u00b6 cc ^id heading 2 \u00b6 hello start_here print ( \"hello\" )","title":"heading 1"},{"location":"notes/note3/#heading-1","text":"Link to ../Python/index Link to ../index","title":"heading 1"},{"location":"notes/note3/#subtitle","text":"cc ^id","title":"subtitle"},{"location":"notes/note3/#heading-2","text":"hello start_here print ( \"hello\" )","title":"heading 2"},{"location":"notes/obsidian%20example/","text":"Obsidian is a Markdown-based note-taking and knowledge base app. We currently support the formats below: Internal linking \u00b6 Link to a page: [[Internal link]]. Link to a page: ../index . Embeds \u00b6 Embed another file (read more about Embed files ). Here\u2019s an embedded section: ![[Obsidian#What is Obsidian]] Headers \u00b6 # This is a heading 1 ## This is a heading 2 ### This is a heading 3 #### This is a heading 4 ##### This is a heading 5 ###### This is a heading 6 This is a heading 1 \u00b6 This is a heading 2 \u00b6 This is a heading 3 \u00b6 This is a heading 4 \u00b6 This is a heading 5 \u00b6 This is a heading 6 \u00b6 Emphasis \u00b6 *This text will be italic* _This will also be italic_ This text will be italic This will also be italic **This text will be bold** __This will also be bold__ This text will be bold This will also be bold _You **can** combine them_ You can combine them Lists \u00b6 - Item 1 - Item 2 - Item 2a - Item 2b 1. Item 1 1. Item 2 1. Item 3 1. Item 3a 1. Item 3b Item 1 Item 2 Item 2a Item 2b Item 1 Item 2 Item 3 Item 3a Item 3b Images \u00b6 ![ Engelbart ]( https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg ) Resizing images \u00b6 Example of this above image resized to 100 pixels wide: ![ Engelbart|100 ]( https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg ) Links \u00b6 External links \u00b6 Markdown style links can be used to refer to either external objects, such as web pages, or an internal page or image. http://obsidian.md - automatic! [ Obsidian ]( http://obsidian.md ) http://obsidian.md - automatic! Obsidian Obsidian URI links \u00b6 Obsidian URI links can be used to open notes in Obsidian either from another Obsidian vault or another program. For example, you can link to a file in a vault like so (please note the required encoding ): [ Link to note ]( obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md ) Link to note You can link to a note by its vault name and file name instead of path as well: [ Link to note ]( obsidian://open?vault=MainVault&file=MyNote.md ) Link to note Escaping \u00b6 If there are spaces in the url, they can be escaped by either using %20 as a space, such as: [ Export options ]( Pasted%20image ) Export options Or you can enclose the target in <> , such as: [ Slides Demo ]( <Slides Demo> ) Slides Demo Blockquotes \u00b6 > Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society. \\- Doug Engelbart, 1961 Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society. - Doug Engelbart, 1961 Inline code \u00b6 Text inside `backticks` on a line will be formatted like code. Text inside backticks on a line will be formatted like code. Code blocks \u00b6 Syntax highlight is supported with the language specified after the first set of backticks. We use prismjs for syntax highlighting, a list of supported languages can be found at their site ```js function fancyAlert(arg) { if(arg) { $.facebox({div:'#foo'}) } } ``` function fancyAlert ( arg ) { if ( arg ) { $ . facebox ({ div : '#foo' }) } } Text indented with a tab is formatted like this, and will also look like a code block in preview. Text indented with a tab is formatted like this, and will also look like a code block in preview. Task list \u00b6 - [x] **tags** {: #tags .hash}, [links](), **formatting** supported - [x] list syntax required (any unordered or ordered list supported) - [x] this is a complete item - [?] this is also a complete item (works with every character) - [ ] this is an incomplete item - [ ] tasks can be clicked in Preview to be checked off #tags, links , formatting supported list syntax required (any unordered or ordered list supported) this is a complete item [?] this is also a complete item (works with every character) this is an incomplete item tasks can be clicked in Preview to be checked off Tables \u00b6 You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe | : First Header | Second Header ------------ | ------------ Content from cell 1 | Content from cell 2 Content in the first column | Content in the second column First Header Second Header Content from cell 1 Content from cell 2 Content in the first column Content in the second column Tables can be justified with a colon | Another example with a long title :----------------|-------------: because of the `:` | these will be justified If you put links in tables, they will work, but if you use Piped Links, the pipe must be escaped with a `\\` to prevent it being read as a table element. Tables can be justified with a colon Another example with a long title because of the : these will be justified If you put links in tables, they will work, but if you use Piped Links, the pipe must be escaped with a \\ to prevent it being read as a table element. First Header | Second Header ------------ | ------------ [[Format your notes\\|Formatting]] | [[Keyboard shortcuts\\|hotkeys]] First Header Second Header Formatting hotkeys Strikethrough \u00b6 Any word wrapped with two tildes (like ~~this~~ ) will appear crossed out. Any word wrapped with two tildes (like this ) will appear crossed out. Highlighting \u00b6 Use two equal signs to ==highlight text==. Use two equal signs to highlight text . Footnotes \u00b6 Here's a simple footnote,[^1] and here's a longer one.[^bignote] [ ^1 ]: meaningful! [ ^bignote ]: Here's one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. `{ my code }` Add as many paragraphs as you like. Here\u2019s a simple footnote, 1 and here\u2019s a longer one. 2 You can also use inline footnotes. ^[notice that the carat goes outside of the brackets on this one.] You can also use inline footnotes. ^[notice that the carat goes outside of the brackets on this one.] Math \u00b6 $$\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc$$ \\[\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc\\] You can also do inline math like \\(e^{2i\\pi} = 1\\) . Obsidian uses Mathjax . You can check which packages are supported in Mathjax here . Comments \u00b6 Use ` Diagram \u00b6 Obsidian uses Mermaid to render diagrams and charts. Mermaid also provides a helpful live editor . ```mermaid sequenceDiagram Alice->>+John: Hello John, how are you? Alice->>+John: John, can you hear me? John-->>-Alice: Hi Alice, I can hear you! John-->>-Alice: I feel great! ``` sequenceDiagram Alice->>+John: Hello John, how are you? Alice->>+John: John, can you hear me? John-->>-Alice: Hi Alice, I can hear you! John-->>-Alice: I feel great! Obsidian supports linking to notes in Mermaid: ```mermaid graph TD Biology --> Chemistry class Biology,Chemistry internal-link; ``` An easier way to do it is the following: ^376b9d ```mermaid graph TD A[Biology] B[Chemistry] A --> B class A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z internal-link; ``` This way, all the note names (at least until Z[note name] ) are all automatically assigned the class internal-link when you use this snippet. If you use special characters in your note names, you need to put the note name in double quotes. \"\u2a33 special character\" It looks like this if you follow the second option : A[\"\u2a33 special character\"] Developer notes \u00b6 We strive for maximum capability without breaking any existing formats, therefore we use a slightly unorthodox combination of flavors of markdown. It is broadly CommonMark, with the addition of some functionality from GitHub Flavored Markdown (GFM), some latex support, and our chosen embed syntax, which you can read more about at Accepted file formats . meaningful! \u21a9 Here\u2019s one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. { my code } Add as many paragraphs as you like. \u21a9","title":"Obsidian example.md"},{"location":"notes/obsidian%20example/#internal-linking","text":"Link to a page: [[Internal link]]. Link to a page: ../index .","title":"Internal linking"},{"location":"notes/obsidian%20example/#embeds","text":"Embed another file (read more about Embed files ). Here\u2019s an embedded section: ![[Obsidian#What is Obsidian]]","title":"Embeds"},{"location":"notes/obsidian%20example/#headers","text":"# This is a heading 1 ## This is a heading 2 ### This is a heading 3 #### This is a heading 4 ##### This is a heading 5 ###### This is a heading 6","title":"Headers"},{"location":"notes/obsidian%20example/#this-is-a-heading-1","text":"","title":"This is a heading 1"},{"location":"notes/obsidian%20example/#this-is-a-heading-2","text":"","title":"This is a heading 2"},{"location":"notes/obsidian%20example/#this-is-a-heading-3","text":"","title":"This is a heading 3"},{"location":"notes/obsidian%20example/#this-is-a-heading-4","text":"","title":"This is a heading 4"},{"location":"notes/obsidian%20example/#this-is-a-heading-5","text":"","title":"This is a heading 5"},{"location":"notes/obsidian%20example/#this-is-a-heading-6","text":"","title":"This is a heading 6"},{"location":"notes/obsidian%20example/#emphasis","text":"*This text will be italic* _This will also be italic_ This text will be italic This will also be italic **This text will be bold** __This will also be bold__ This text will be bold This will also be bold _You **can** combine them_ You can combine them","title":"Emphasis"},{"location":"notes/obsidian%20example/#lists","text":"- Item 1 - Item 2 - Item 2a - Item 2b 1. Item 1 1. Item 2 1. Item 3 1. Item 3a 1. Item 3b Item 1 Item 2 Item 2a Item 2b Item 1 Item 2 Item 3 Item 3a Item 3b","title":"Lists"},{"location":"notes/obsidian%20example/#images","text":"![ Engelbart ]( https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg )","title":"Images"},{"location":"notes/obsidian%20example/#resizing-images","text":"Example of this above image resized to 100 pixels wide: ![ Engelbart|100 ]( https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg )","title":"Resizing images"},{"location":"notes/obsidian%20example/#links","text":"","title":"Links"},{"location":"notes/obsidian%20example/#external-links","text":"Markdown style links can be used to refer to either external objects, such as web pages, or an internal page or image. http://obsidian.md - automatic! [ Obsidian ]( http://obsidian.md ) http://obsidian.md - automatic! Obsidian","title":"External links"},{"location":"notes/obsidian%20example/#obsidian-uri-links","text":"Obsidian URI links can be used to open notes in Obsidian either from another Obsidian vault or another program. For example, you can link to a file in a vault like so (please note the required encoding ): [ Link to note ]( obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md ) Link to note You can link to a note by its vault name and file name instead of path as well: [ Link to note ]( obsidian://open?vault=MainVault&file=MyNote.md ) Link to note","title":"Obsidian URI links"},{"location":"notes/obsidian%20example/#escaping","text":"If there are spaces in the url, they can be escaped by either using %20 as a space, such as: [ Export options ]( Pasted%20image ) Export options Or you can enclose the target in <> , such as: [ Slides Demo ]( <Slides Demo> ) Slides Demo","title":"Escaping"},{"location":"notes/obsidian%20example/#blockquotes","text":"> Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society. \\- Doug Engelbart, 1961 Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society. - Doug Engelbart, 1961","title":"Blockquotes"},{"location":"notes/obsidian%20example/#inline-code","text":"Text inside `backticks` on a line will be formatted like code. Text inside backticks on a line will be formatted like code.","title":"Inline code"},{"location":"notes/obsidian%20example/#code-blocks","text":"Syntax highlight is supported with the language specified after the first set of backticks. We use prismjs for syntax highlighting, a list of supported languages can be found at their site ```js function fancyAlert(arg) { if(arg) { $.facebox({div:'#foo'}) } } ``` function fancyAlert ( arg ) { if ( arg ) { $ . facebox ({ div : '#foo' }) } } Text indented with a tab is formatted like this, and will also look like a code block in preview. Text indented with a tab is formatted like this, and will also look like a code block in preview.","title":"Code blocks"},{"location":"notes/obsidian%20example/#task-list","text":"- [x] **tags** {: #tags .hash}, [links](), **formatting** supported - [x] list syntax required (any unordered or ordered list supported) - [x] this is a complete item - [?] this is also a complete item (works with every character) - [ ] this is an incomplete item - [ ] tasks can be clicked in Preview to be checked off #tags, links , formatting supported list syntax required (any unordered or ordered list supported) this is a complete item [?] this is also a complete item (works with every character) this is an incomplete item tasks can be clicked in Preview to be checked off","title":"Task list"},{"location":"notes/obsidian%20example/#tables","text":"You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe | : First Header | Second Header ------------ | ------------ Content from cell 1 | Content from cell 2 Content in the first column | Content in the second column First Header Second Header Content from cell 1 Content from cell 2 Content in the first column Content in the second column Tables can be justified with a colon | Another example with a long title :----------------|-------------: because of the `:` | these will be justified If you put links in tables, they will work, but if you use Piped Links, the pipe must be escaped with a `\\` to prevent it being read as a table element. Tables can be justified with a colon Another example with a long title because of the : these will be justified If you put links in tables, they will work, but if you use Piped Links, the pipe must be escaped with a \\ to prevent it being read as a table element. First Header | Second Header ------------ | ------------ [[Format your notes\\|Formatting]] | [[Keyboard shortcuts\\|hotkeys]] First Header Second Header Formatting hotkeys","title":"Tables"},{"location":"notes/obsidian%20example/#strikethrough","text":"Any word wrapped with two tildes (like ~~this~~ ) will appear crossed out. Any word wrapped with two tildes (like this ) will appear crossed out.","title":"Strikethrough"},{"location":"notes/obsidian%20example/#highlighting","text":"Use two equal signs to ==highlight text==. Use two equal signs to highlight text .","title":"Highlighting"},{"location":"notes/obsidian%20example/#footnotes","text":"Here's a simple footnote,[^1] and here's a longer one.[^bignote] [ ^1 ]: meaningful! [ ^bignote ]: Here's one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. `{ my code }` Add as many paragraphs as you like. Here\u2019s a simple footnote, 1 and here\u2019s a longer one. 2 You can also use inline footnotes. ^[notice that the carat goes outside of the brackets on this one.] You can also use inline footnotes. ^[notice that the carat goes outside of the brackets on this one.]","title":"Footnotes"},{"location":"notes/obsidian%20example/#math","text":"$$\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc$$ \\[\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc\\] You can also do inline math like \\(e^{2i\\pi} = 1\\) . Obsidian uses Mathjax . You can check which packages are supported in Mathjax here .","title":"Math"},{"location":"notes/obsidian%20example/#comments","text":"Use `","title":"Comments"},{"location":"notes/obsidian%20example/#diagram","text":"Obsidian uses Mermaid to render diagrams and charts. Mermaid also provides a helpful live editor . ```mermaid sequenceDiagram Alice->>+John: Hello John, how are you? Alice->>+John: John, can you hear me? John-->>-Alice: Hi Alice, I can hear you! John-->>-Alice: I feel great! ``` sequenceDiagram Alice->>+John: Hello John, how are you? Alice->>+John: John, can you hear me? John-->>-Alice: Hi Alice, I can hear you! John-->>-Alice: I feel great! Obsidian supports linking to notes in Mermaid: ```mermaid graph TD Biology --> Chemistry class Biology,Chemistry internal-link; ``` An easier way to do it is the following: ^376b9d ```mermaid graph TD A[Biology] B[Chemistry] A --> B class A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z internal-link; ``` This way, all the note names (at least until Z[note name] ) are all automatically assigned the class internal-link when you use this snippet. If you use special characters in your note names, you need to put the note name in double quotes. \"\u2a33 special character\" It looks like this if you follow the second option : A[\"\u2a33 special character\"]","title":"Diagram"},{"location":"notes/obsidian%20example/#developer-notes","text":"We strive for maximum capability without breaking any existing formats, therefore we use a slightly unorthodox combination of flavors of markdown. It is broadly CommonMark, with the addition of some functionality from GitHub Flavored Markdown (GFM), some latex support, and our chosen embed syntax, which you can read more about at Accepted file formats . meaningful! \u21a9 Here\u2019s one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. { my code } Add as many paragraphs as you like. \u21a9","title":"Developer notes"},{"location":"fr/","text":"Mkdocs Obsidian est une association entre un plugin Obsidian et un mod\u00e8le Material mkdocs pour obtenir un site wiki personnel bas\u00e9 sur votre coffre Obsidian. Documentation Owlly Seed (Mon blog ; en fran\u00e7aiks) Les plugins sont accessibles avec une action github et un module d\u2019Obsidian. Liens principaux \u00b6 Module Obsidian Mod\u00e8le Support \u00b6 Wikilinks ( [[Liens]] ) Transclusion/embed de fichiers, tant pour les liens wikilinks que pour les liens markdowns Callout d\u2019obsidian & les callouts personnalis\u00e9s Folder notes et leur \u201ccitation\u201d Attributs customis\u00e9s \u00c9tat de partage et hi\u00e9rarchie de dossiers personnalis\u00e9e. Mobile et PC Mini aper\u00e7u du fichier au survol Github actions & Obsidian\u2019s plugin \u00b6 TLDR \u00b6 Installation via les modules communautaire ou BRAT Templater le blog et configurez-le. Configurer les options du plugins : Nom du d\u00e9p\u00f4t Votre pseudonyme GitHub Le Token GitHub ( from here ) La cl\u00e9 de partage Ajouter la cl\u00e9 \u00e0 l\u2019\u00e9tat true dans vos fichiers Obsidian Personnalisez (ou non) les options de dossiers Ex\u00e9cutez les commandes par le biais du menu fichier ou de la palette de commandes. Regardez ici pour plus d\u2019explication Using terminal commands \u00b6 D\u00e9pr\u00e9ci\u00e9 Prerequisites \u00b6 Vous avez besoin de : Git et un compte Github Python Optionnel (Windows) : Windows Terminal TLDR \u00b6 Installer / mettre \u00e0 jour avec pip install obs2mk --upgrade . Template le blog, clonez-le et configurez le blog. Configurer le script (premi\u00e8re ex\u00e9cution) Ajouter la cl\u00e9 de partage dans le fichier Obsidian Personnalisation de la touche category dans le frontmatter des notes d\u2019Obsidian Ex\u00e9cutez le script obs2mk . Tutoriel d\u2019installation rapide d\u2019un blog \u00b6 Cliquez sur use this template 1 Utilisez le nom de votre choix Cliquez sur code \u2192 SSH ; Copiez le lien Lancer (dans un terminal): git clone [[ PASTE THE LINK HERE ]] publish_blog pip install -r requirements.txt N\u2019oubliez pas non plus de configurer GitHub pour autoriser le push ! (Voir ici pour des informations sur la configuration de Git) ( https://docs.github.com/en/get-started/quickstart/set-up-git ) Vous devez \u00eatre connect\u00e9 pour copier le template ! Vous pouvez tester localement par clone > https : git clone https://github.com/Mara-Li/mkdocs_obsidian_template.git ou en t\u00e9l\u00e9chargeant le ZIP \u21a9","title":"Home"},{"location":"fr/#liens-principaux","text":"Module Obsidian Mod\u00e8le","title":"Liens principaux"},{"location":"fr/#support","text":"Wikilinks ( [[Liens]] ) Transclusion/embed de fichiers, tant pour les liens wikilinks que pour les liens markdowns Callout d\u2019obsidian & les callouts personnalis\u00e9s Folder notes et leur \u201ccitation\u201d Attributs customis\u00e9s \u00c9tat de partage et hi\u00e9rarchie de dossiers personnalis\u00e9e. Mobile et PC Mini aper\u00e7u du fichier au survol","title":"Support"},{"location":"fr/#github-actions-obsidians-plugin","text":"","title":"Github actions &amp; Obsidian's plugin"},{"location":"fr/#tldr","text":"Installation via les modules communautaire ou BRAT Templater le blog et configurez-le. Configurer les options du plugins : Nom du d\u00e9p\u00f4t Votre pseudonyme GitHub Le Token GitHub ( from here ) La cl\u00e9 de partage Ajouter la cl\u00e9 \u00e0 l\u2019\u00e9tat true dans vos fichiers Obsidian Personnalisez (ou non) les options de dossiers Ex\u00e9cutez les commandes par le biais du menu fichier ou de la palette de commandes. Regardez ici pour plus d\u2019explication","title":"TLDR"},{"location":"fr/#using-terminal-commands","text":"D\u00e9pr\u00e9ci\u00e9","title":"Using terminal commands"},{"location":"fr/#prerequisites","text":"Vous avez besoin de : Git et un compte Github Python Optionnel (Windows) : Windows Terminal","title":"Prerequisites"},{"location":"fr/#tldr_1","text":"Installer / mettre \u00e0 jour avec pip install obs2mk --upgrade . Template le blog, clonez-le et configurez le blog. Configurer le script (premi\u00e8re ex\u00e9cution) Ajouter la cl\u00e9 de partage dans le fichier Obsidian Personnalisation de la touche category dans le frontmatter des notes d\u2019Obsidian Ex\u00e9cutez le script obs2mk .","title":"TLDR"},{"location":"fr/#tutoriel-dinstallation-rapide-dun-blog","text":"Cliquez sur use this template 1 Utilisez le nom de votre choix Cliquez sur code \u2192 SSH ; Copiez le lien Lancer (dans un terminal): git clone [[ PASTE THE LINK HERE ]] publish_blog pip install -r requirements.txt N\u2019oubliez pas non plus de configurer GitHub pour autoriser le push ! (Voir ici pour des informations sur la configuration de Git) ( https://docs.github.com/en/get-started/quickstart/set-up-git ) Vous devez \u00eatre connect\u00e9 pour copier le template ! Vous pouvez tester localement par clone > https : git clone https://github.com/Mara-Li/mkdocs_obsidian_template.git ou en t\u00e9l\u00e9chargeant le ZIP \u21a9","title":"Tutoriel d'installation rapide d'un blog"},{"location":"fr/Obsidian%20Github%20Publisher/","text":"EN \ud83c\uddec\ud83c\udde7 Ce que fait le plugin Configuration \u27a1\ufe0f Example de configuration GitHub Configuration des envoies Dossiers de r\u00e9ceptions Bloc de m\u00e9tadonn\u00e9es Dossier fix\u00e9 Chemin Obsidian Workflow Auto-nettoyage Conversion des liens Index & folder note Lien internes Lien Wikilinks vers lien markdown Transclusion embed Param\u00e8tres du plugin \ud83e\udd16 D\u00e9veloppement G\u00e9n\u00e9ral Traduction GitHub Publisher est un plugin qui vous aide \u00e0 envoyer des fichiers dans un d\u00e9p\u00f4t GitHub configur\u00e9, en fonction de l\u2019\u00e9tat d\u2019une cl\u00e9 de partage situ\u00e9 dans votre bloc de m\u00e9tadonn\u00e9e (frontmatter). Vous pouvez l\u2019utiliser pour envoyer n\u2019importe quel fichier markdown sur GitHub, permettant la compatibilit\u00e9 avec de nombreuses alternatives d\u2019Obsidian Publish. Lorsqu\u2019un fichier partag\u00e9 est trouv\u00e9, il sera envoy\u00e9 dans une nouvelle branche nomm\u00e9e par votre_nom_du_coffre-mois-jour-ann\u00e9e . Une pull request suivie d\u2019une fusion sera faite, et si tout est correct, la branche sera supprim\u00e9e apr\u00e8s la fusion. Ainsi, vous pouvez facilement revenir sur un commit, et cr\u00e9er un workflow bas\u00e9 sur un PR, un PR fusionn\u00e9, un push sp\u00e9cifique\u2026 Ce que fait le plugin \u00b6 Lire le frontmatter pour v\u00e9rifier la valeur d\u2019une cl\u00e9 share configur\u00e9e. Envoyer le fichier (et son image int\u00e9gr\u00e9e ou ses notes s\u2019il y en a) vers un d\u00e9p\u00f4t GitHub. Mais le plugin peut faire beaucoup plus ! Convertir des wikilinks en liens markdown (sans modifier votre fichier) Activez une action GitHub qui a un \u00e9v\u00e9nement workflow_dispatche . Convertir les liens internes en fonction de la configuration. Nettoyer votre repo en supprimant les fichiers supprim\u00e9s et non partag\u00e9s Renommer le dossier note avec les m\u00eames strat\u00e9gies de nom avec index.md (+ respecter les param\u00e8tres du dossier) Partager les fichiers transcluent automatiquement (uniquement s\u2019ils ont la cl\u00e9 de partage) Copier un lien vers votre presse-papier ! Convertir les block dataview ! Configuration \u00b6 Pour utiliser le plugin, vous devez remplir les informations correctes afin de pouvoir envoyer des fichiers dans un d\u00e9p\u00f4t GitHub. \u27a1\ufe0f Example de configuration \u00b6 Vous trouverez ici quelque exemple de configuration possible pour le plugin, comme par exemple Mkdocs Publisher ou @TuanManhCao Digital Garden . Ajouter des exemples Il est tout \u00e0 fait possible de m\u2019envoyer ou de pull-request de nouvelles configurations pour d\u2019autres alternatives gratuites \u00e0 Obsidian Publish. GitHub \u00b6 Nom du d\u00e9p\u00f4t : Le d\u00e9p\u00f4t dans lequel les fichiers seront envoy\u00e9s Pseudonyme GitHub: Votre pseudonyme. Token GitHub : Obtenez votre Token GitHub ici 2 . Les param\u00e8tres corrects devraient d\u00e9j\u00e0 \u00eatre appliqu\u00e9s. Si vous voulez \u00e9viter de g\u00e9n\u00e9rer ce jeton tous les quelques mois, s\u00e9lectionnez l\u2019option \u201cNo expiration\u201d. Cliquez sur le bouton \u201cGenerate token\u201d, et copiez le jeton qui vous est pr\u00e9sent\u00e9 sur la page suivante. Configuration des envoies \u00b6 Dossiers de r\u00e9ceptions \u00b6 Vous avez trois possibilit\u00e9s : Utiliser un dossier \u201cfixe\u201d : Chaque fichier sera envoy\u00e9 dans ce dossier. Utiliser un dossier cr\u00e9\u00e9 \u00e0 partir d\u2019une cl\u00e9 category . Utiliser le chemin relatif depuis obsidian. Vous pouvez pr\u00e9fixer un dossier en utilisant le dossier par d\u00e9faut. Vous devez, dans tous les cas, configurer le dossier par d\u00e9faut : Le fichier sera envoy\u00e9 ici. Si vous utilisez l\u2019option pour frontmatter, ce dossier sera le dossier par d\u00e9faut : le fichier sera envoy\u00e9 ici si la cl\u00e9 de cat\u00e9gorie n\u2019existe pas. Bloc de m\u00e9tadonn\u00e9es \u00b6 L\u2019utilisation de la deuxi\u00e8me option activera deux autres options : La cl\u00e9 de cat\u00e9gorie : La cl\u00e9 que vous souhaitez utiliser pour votre dossier. Dossier racine : Pour ajouter un chemin d\u2019acc\u00e8s avant la cl\u00e9 de cat\u00e9gorie trouv\u00e9e (si une cl\u00e9 est trouv\u00e9e !). Par exemple Vous utilisez category dans un fichier avec category : JDR/Personnages/DND Vous d\u00e9finissez un dossier racine avec _docs/pages . Vous d\u00e9finissez un dossier par d\u00e9faut sur _docs/draft Le chemin final (dans GitHub !) sera : _docs/pages/JDR/Personnages/DND Mais, si vous ne mettez pas category , le chemin sera _docs/draft . Dossier fix\u00e9 \u00b6 Chaque fichier sera envoy\u00e9 dans le dossier par d\u00e9faut. Si vous laissez le dossier par d\u00e9faut vide, il sera envoy\u00e9 \u00e0 la racine du d\u00e9p\u00f4t. Par exemple Si vous d\u00e9finissez source pour le dossier par d\u00e9faut, tout fichier sera envoy\u00e9 dans votre_repo/source , quelque soit sa cl\u00e9 frontmatter ou son chemin relatif. Si vous le laissez vide, il sera envoy\u00e9 directement dans votre_repo . Chemin Obsidian \u00b6 Il utilise le chemin relatif dans votre coffre-fort Obsidian. Le dossier par d\u00e9faut sera ajout\u00e9 avant le chemin relatif d\u2019Obsidian. Vous pouvez le laisser vide pour utiliser la racine de votre d\u00e9p\u00f4t. Par exemple Pour un fichier dans 20. Compendium/DND/Cr\u00e9ature Si vous d\u00e9finissez source : le chemin final sera source/20. Compendium/DND/Cr\u00e9ature . Si vous laissez le dossier par d\u00e9faut vide, le chemin final sera 20. Compendium/DND/Cr\u00e9ature La suppression de chemin vous permet de supprimer une partie du chemin cr\u00e9\u00e9, vers, par exemple, un sous-dossier de synchronisation. Si le chemin supprim\u00e9 n\u2019est pas trouv\u00e9, le comportement normal s\u2019applique. Synchroniser un sous-dossier Vous pouvez utiliser cette option pour d\u00e9signer un sous-dossier comme \u201ccoffre-fort\u201d pour la synchronisation du d\u00e9p\u00f4t. Vous pourrez utiliser vault/sub comme le chemin retir\u00e9. L\u2019envoie passera par vault/sub comme racine dans le d\u00e9p\u00f4t. Un fichier dans vault/sub/dossierA sera envoy\u00e9 dans repo/dossierA . Workflow \u00b6 Si votre workflow doit activer une action GitHub, d\u00e9finissez le nom ici. Laissez-le vide pour d\u00e9sactiver l\u2019activation des actions GitHub. Auto-nettoyage \u00b6 Vous pouvez \u00e9galement configurer une \u201csuppression automatique\u201d lorsque vous utilisez les commandes pour supprimer des fichiers : Supprim\u00e9s de votre coffre-fort Que vous avez cess\u00e9 de partager Cette option ajoutera \u00e9galement une nouvelle commande pour nettoyer les fichiers uniquement. Attention Vous ne pouvez pas utiliser la commande delete si vous n\u2019avez pas d\u00e9fini un dossier par d\u00e9faut (et un dossier racine si vous utilisez la configuration YAML). De plus, vous pouvez perdre certains fichiers en utilisant cette commande, alors faites attention ! N\u2019oubliez pas que vous pouvez revenir en arri\u00e8re au cas o\u00f9 le plugin supprimerait un fichier que vous ne souhaitez pas supprimer. Il est aussi possible d\u2019emp\u00eacher la suppression en utilisant, dans le frontmatter : share: false sur un fichier dans le d\u00e9p\u00f4t (uniquement) ou sans cl\u00e9 de partage. autoclean: false dans le fichier de configuration index: true Vous pouvez d\u00e9finir le chemin d\u2019acc\u00e8s des dossiers et fichier dont vous voulez \u00e9viter la suppression. S\u00e9parez les dossiers/fichiers par une virgule. 1 Les regex ne sont pas support\u00e9es ici! Conversion des liens \u00b6 Ces param\u00e8tres ne modifieront pas le contenu de votre fichier dans votre coffre-fort. Index & folder note \u00b6 Certaines solutions de publication prennent en charge les notes de dossier, mais ces notes doivent \u00eatre nomm\u00e9es index . Si vous utilisez Folder Note avec les strat\u00e9gies same name , vous aurez un probl\u00e8me, non ? Par chance, j\u2019ai une solution pour vous, les gars ! Maintenant, le plugin va convertir ces fichiers en index si vous activez les param\u00e8tres. Voici quelques exemples de renommage, en utilisant les diff\u00e9rents param\u00e8tres du dossier par d\u00e9faut. Exemple de frontmatter avec un fichier nomm\u00e9 folder2 Avec une valeur de cat\u00e9gorie : dossier1/dossier2 Avec une valeur racine nomm\u00e9e docs \u21d2 docs/folder1/folder2/index.md Sans valeur racine : folder1/folder2/index.md Sans valeur de cat\u00e9gorie, avec un dossier par d\u00e9faut nomm\u00e9 drafts : draft/folder2.md (le nom ne sera pas converti !) Exemple avec le chemin Obsidian et un dossier nomm\u00e9 folder2 Avec un chemin comme : dossier1/dossier2 le nouveau chemin sera : Si vous utilisez un dossier par d\u00e9faut nomm\u00e9 docs : docs/folder1/folder2/index.md Sans : folder1/folder2/index.md Cette option ne fonctionne pas avec un dossier fixe. Lien internes \u00b6 Cette option convertira les liens internes (y compris les liens d\u2019image !) du fichier partag\u00e9 pour correspondre au fichier relatif dans votre d\u00e9p\u00f4t. Seuls les chemins de fichier existant et partag\u00e9 seront convertis. Exemple Fichier cit\u00e9 : docs/XX/YY/mon_fichier.md . Fichier \u00e0 convertir : docs/XX/ZZ/new_file.md . Chemin cr\u00e9\u00e9 : ../YY/mon_fichier.md . Lien Wikilinks vers lien markdown \u00b6 Si vous utilisez des wikilinks quotidiennement mais que votre alternative \u00e0 Obsidian Publish ne le supporte pas, vous pouvez utiliser ces param\u00e8tres pour convertir les wikilink en lien markdown. Transclusion (embed) \u00b6 Vous pouvez choisir d\u2019envoyer des fichiers transcluent : Des images : L\u2019image sera copi\u00e9e dans le d\u00e9p\u00f4t dans un dossier d\u00e9fini en option ou dans le dossier par d\u00e9faut. Notes : Seuls les fichiers partag\u00e9s seront copi\u00e9s dans le d\u00e9p\u00f4t, dans leur dossier respectifs (suivant vos param\u00e8tres). Param\u00e8tres du plugin \u00b6 Vous pouvez configurer : La cl\u00e9 de partage utilis\u00e9e par le plugin. Par d\u00e9faut, c\u2019est share . Les dossiers exclus. La cl\u00e9 de partage ne peut pas fonctionner ici. Utile si vous oubliez de supprimer le share (ou de le mettre \u00e0 false ) et que vous d\u00e9placez un fichier dans votre archive\u2026 Ajoutez la commande pour partager le fichier dans le menu fichier (clic droit sur un fichier dans l\u2019explorateur ou en utilisant les trois points) et dans le menu \u00e9diteur (clic droit sur une note \u00e9dit\u00e9e ouverte) Ajout de la note de partage du lien dans votre presse-papiers apr\u00e8s le partage. Vous pouvez configurer le chemin cr\u00e9\u00e9 ici, en supprimant certaines parties. Comme il supporte plusieurs parties, vous pouvez s\u00e9parer les parties en utilisant des virgules. Par exemple, vous pouvez supprimer un dossier docs/ et l\u2019extension markdown en utilisant : docs/, .md . La commande du menu de clic droit peut aussi envoyer le fichier sous votre curseur si c\u2019est un lien ! \ud83e\udd16 D\u00e9veloppement \u00b6 G\u00e9n\u00e9ral \u00b6 Vous pouvez m\u2019aider \u00e0 d\u00e9velopper le plugin en utilisant npm ! Tout d\u2019abord, clonez le projet sur votre ordinateur avec git clone git@github.com:obsidianPublisher/obsidian-github-publisher.git . cd obsidian-github-publisher . npm install Quelque notes : J\u2019utilise les Conventional Commit pour g\u00e9n\u00e9rer le changelog, donc merci de respectez les sp\u00e9cifications ! De documenter les fonctions que vous cr\u00e9ez. Traduction \u00b6 En utilisant i18n , vous pouvez traduire le plugin. Pour ajouter un nouveau langage : Clonez le fichier i18n/locales/en-us.ts et renommez-le dans votre langue. Obtenez votre langue locale depuis Obsidian en utilisant obsidian translation ou en utilisant les commandes (dans templater par exemple) : <% tp.obsidian.moment.locale() %> Traduisez le fichier et enregistrez-le. Dans i18n/index.ts : Importez le nouveau fichier comme import language from .locales/language`. ajoutez la nouvelle langue dans l\u2019objet json localeMap : { \"language\" : language } De plus, vous pouvez tester si votre traduction est correcte. Cr\u00e9ez un PR pour ajouter votre traduction ! Si vous trouvez ce module et ce workflow utile, vous pouvez m\u2019envoyer de quoi m\u2019acheter du caf\u00e9 en grande quantit\u00e9 : Seuls les fichiers support\u00e9s par Obsidian seront supprim\u00e9s. \u21a9 De mani\u00e8re \u00e9vidente, vous devez \u00eatre connect\u00e9s pour pouvoir cr\u00e9er le token. De fait, vous \u00eates oblig\u00e9s d\u2019avoir un compte github! \u21a9","title":"Index"},{"location":"fr/Obsidian%20Github%20Publisher/#ce-que-fait-le-plugin","text":"Lire le frontmatter pour v\u00e9rifier la valeur d\u2019une cl\u00e9 share configur\u00e9e. Envoyer le fichier (et son image int\u00e9gr\u00e9e ou ses notes s\u2019il y en a) vers un d\u00e9p\u00f4t GitHub. Mais le plugin peut faire beaucoup plus ! Convertir des wikilinks en liens markdown (sans modifier votre fichier) Activez une action GitHub qui a un \u00e9v\u00e9nement workflow_dispatche . Convertir les liens internes en fonction de la configuration. Nettoyer votre repo en supprimant les fichiers supprim\u00e9s et non partag\u00e9s Renommer le dossier note avec les m\u00eames strat\u00e9gies de nom avec index.md (+ respecter les param\u00e8tres du dossier) Partager les fichiers transcluent automatiquement (uniquement s\u2019ils ont la cl\u00e9 de partage) Copier un lien vers votre presse-papier ! Convertir les block dataview !","title":"Ce que fait le plugin"},{"location":"fr/Obsidian%20Github%20Publisher/#configuration","text":"Pour utiliser le plugin, vous devez remplir les informations correctes afin de pouvoir envoyer des fichiers dans un d\u00e9p\u00f4t GitHub.","title":"Configuration"},{"location":"fr/Obsidian%20Github%20Publisher/#example-de-configuration","text":"Vous trouverez ici quelque exemple de configuration possible pour le plugin, comme par exemple Mkdocs Publisher ou @TuanManhCao Digital Garden . Ajouter des exemples Il est tout \u00e0 fait possible de m\u2019envoyer ou de pull-request de nouvelles configurations pour d\u2019autres alternatives gratuites \u00e0 Obsidian Publish.","title":"\u27a1\ufe0f Example de configuration"},{"location":"fr/Obsidian%20Github%20Publisher/#github","text":"Nom du d\u00e9p\u00f4t : Le d\u00e9p\u00f4t dans lequel les fichiers seront envoy\u00e9s Pseudonyme GitHub: Votre pseudonyme. Token GitHub : Obtenez votre Token GitHub ici 2 . Les param\u00e8tres corrects devraient d\u00e9j\u00e0 \u00eatre appliqu\u00e9s. Si vous voulez \u00e9viter de g\u00e9n\u00e9rer ce jeton tous les quelques mois, s\u00e9lectionnez l\u2019option \u201cNo expiration\u201d. Cliquez sur le bouton \u201cGenerate token\u201d, et copiez le jeton qui vous est pr\u00e9sent\u00e9 sur la page suivante.","title":"GitHub"},{"location":"fr/Obsidian%20Github%20Publisher/#configuration-des-envoies","text":"","title":"Configuration des envoies"},{"location":"fr/Obsidian%20Github%20Publisher/#dossiers-de-receptions","text":"Vous avez trois possibilit\u00e9s : Utiliser un dossier \u201cfixe\u201d : Chaque fichier sera envoy\u00e9 dans ce dossier. Utiliser un dossier cr\u00e9\u00e9 \u00e0 partir d\u2019une cl\u00e9 category . Utiliser le chemin relatif depuis obsidian. Vous pouvez pr\u00e9fixer un dossier en utilisant le dossier par d\u00e9faut. Vous devez, dans tous les cas, configurer le dossier par d\u00e9faut : Le fichier sera envoy\u00e9 ici. Si vous utilisez l\u2019option pour frontmatter, ce dossier sera le dossier par d\u00e9faut : le fichier sera envoy\u00e9 ici si la cl\u00e9 de cat\u00e9gorie n\u2019existe pas.","title":"Dossiers de r\u00e9ceptions"},{"location":"fr/Obsidian%20Github%20Publisher/#bloc-de-metadonnees","text":"L\u2019utilisation de la deuxi\u00e8me option activera deux autres options : La cl\u00e9 de cat\u00e9gorie : La cl\u00e9 que vous souhaitez utiliser pour votre dossier. Dossier racine : Pour ajouter un chemin d\u2019acc\u00e8s avant la cl\u00e9 de cat\u00e9gorie trouv\u00e9e (si une cl\u00e9 est trouv\u00e9e !). Par exemple Vous utilisez category dans un fichier avec category : JDR/Personnages/DND Vous d\u00e9finissez un dossier racine avec _docs/pages . Vous d\u00e9finissez un dossier par d\u00e9faut sur _docs/draft Le chemin final (dans GitHub !) sera : _docs/pages/JDR/Personnages/DND Mais, si vous ne mettez pas category , le chemin sera _docs/draft .","title":"Bloc de m\u00e9tadonn\u00e9es"},{"location":"fr/Obsidian%20Github%20Publisher/#dossier-fixe","text":"Chaque fichier sera envoy\u00e9 dans le dossier par d\u00e9faut. Si vous laissez le dossier par d\u00e9faut vide, il sera envoy\u00e9 \u00e0 la racine du d\u00e9p\u00f4t. Par exemple Si vous d\u00e9finissez source pour le dossier par d\u00e9faut, tout fichier sera envoy\u00e9 dans votre_repo/source , quelque soit sa cl\u00e9 frontmatter ou son chemin relatif. Si vous le laissez vide, il sera envoy\u00e9 directement dans votre_repo .","title":"Dossier fix\u00e9"},{"location":"fr/Obsidian%20Github%20Publisher/#chemin-obsidian","text":"Il utilise le chemin relatif dans votre coffre-fort Obsidian. Le dossier par d\u00e9faut sera ajout\u00e9 avant le chemin relatif d\u2019Obsidian. Vous pouvez le laisser vide pour utiliser la racine de votre d\u00e9p\u00f4t. Par exemple Pour un fichier dans 20. Compendium/DND/Cr\u00e9ature Si vous d\u00e9finissez source : le chemin final sera source/20. Compendium/DND/Cr\u00e9ature . Si vous laissez le dossier par d\u00e9faut vide, le chemin final sera 20. Compendium/DND/Cr\u00e9ature La suppression de chemin vous permet de supprimer une partie du chemin cr\u00e9\u00e9, vers, par exemple, un sous-dossier de synchronisation. Si le chemin supprim\u00e9 n\u2019est pas trouv\u00e9, le comportement normal s\u2019applique. Synchroniser un sous-dossier Vous pouvez utiliser cette option pour d\u00e9signer un sous-dossier comme \u201ccoffre-fort\u201d pour la synchronisation du d\u00e9p\u00f4t. Vous pourrez utiliser vault/sub comme le chemin retir\u00e9. L\u2019envoie passera par vault/sub comme racine dans le d\u00e9p\u00f4t. Un fichier dans vault/sub/dossierA sera envoy\u00e9 dans repo/dossierA .","title":"Chemin Obsidian"},{"location":"fr/Obsidian%20Github%20Publisher/#workflow","text":"Si votre workflow doit activer une action GitHub, d\u00e9finissez le nom ici. Laissez-le vide pour d\u00e9sactiver l\u2019activation des actions GitHub.","title":"Workflow"},{"location":"fr/Obsidian%20Github%20Publisher/#auto-nettoyage","text":"Vous pouvez \u00e9galement configurer une \u201csuppression automatique\u201d lorsque vous utilisez les commandes pour supprimer des fichiers : Supprim\u00e9s de votre coffre-fort Que vous avez cess\u00e9 de partager Cette option ajoutera \u00e9galement une nouvelle commande pour nettoyer les fichiers uniquement. Attention Vous ne pouvez pas utiliser la commande delete si vous n\u2019avez pas d\u00e9fini un dossier par d\u00e9faut (et un dossier racine si vous utilisez la configuration YAML). De plus, vous pouvez perdre certains fichiers en utilisant cette commande, alors faites attention ! N\u2019oubliez pas que vous pouvez revenir en arri\u00e8re au cas o\u00f9 le plugin supprimerait un fichier que vous ne souhaitez pas supprimer. Il est aussi possible d\u2019emp\u00eacher la suppression en utilisant, dans le frontmatter : share: false sur un fichier dans le d\u00e9p\u00f4t (uniquement) ou sans cl\u00e9 de partage. autoclean: false dans le fichier de configuration index: true Vous pouvez d\u00e9finir le chemin d\u2019acc\u00e8s des dossiers et fichier dont vous voulez \u00e9viter la suppression. S\u00e9parez les dossiers/fichiers par une virgule. 1 Les regex ne sont pas support\u00e9es ici!","title":"Auto-nettoyage"},{"location":"fr/Obsidian%20Github%20Publisher/#conversion-des-liens","text":"Ces param\u00e8tres ne modifieront pas le contenu de votre fichier dans votre coffre-fort.","title":"Conversion des liens"},{"location":"fr/Obsidian%20Github%20Publisher/#index-folder-note","text":"Certaines solutions de publication prennent en charge les notes de dossier, mais ces notes doivent \u00eatre nomm\u00e9es index . Si vous utilisez Folder Note avec les strat\u00e9gies same name , vous aurez un probl\u00e8me, non ? Par chance, j\u2019ai une solution pour vous, les gars ! Maintenant, le plugin va convertir ces fichiers en index si vous activez les param\u00e8tres. Voici quelques exemples de renommage, en utilisant les diff\u00e9rents param\u00e8tres du dossier par d\u00e9faut. Exemple de frontmatter avec un fichier nomm\u00e9 folder2 Avec une valeur de cat\u00e9gorie : dossier1/dossier2 Avec une valeur racine nomm\u00e9e docs \u21d2 docs/folder1/folder2/index.md Sans valeur racine : folder1/folder2/index.md Sans valeur de cat\u00e9gorie, avec un dossier par d\u00e9faut nomm\u00e9 drafts : draft/folder2.md (le nom ne sera pas converti !) Exemple avec le chemin Obsidian et un dossier nomm\u00e9 folder2 Avec un chemin comme : dossier1/dossier2 le nouveau chemin sera : Si vous utilisez un dossier par d\u00e9faut nomm\u00e9 docs : docs/folder1/folder2/index.md Sans : folder1/folder2/index.md Cette option ne fonctionne pas avec un dossier fixe.","title":"Index &amp; folder note"},{"location":"fr/Obsidian%20Github%20Publisher/#lien-internes","text":"Cette option convertira les liens internes (y compris les liens d\u2019image !) du fichier partag\u00e9 pour correspondre au fichier relatif dans votre d\u00e9p\u00f4t. Seuls les chemins de fichier existant et partag\u00e9 seront convertis. Exemple Fichier cit\u00e9 : docs/XX/YY/mon_fichier.md . Fichier \u00e0 convertir : docs/XX/ZZ/new_file.md . Chemin cr\u00e9\u00e9 : ../YY/mon_fichier.md .","title":"Lien internes"},{"location":"fr/Obsidian%20Github%20Publisher/#lien-wikilinks-vers-lien-markdown","text":"Si vous utilisez des wikilinks quotidiennement mais que votre alternative \u00e0 Obsidian Publish ne le supporte pas, vous pouvez utiliser ces param\u00e8tres pour convertir les wikilink en lien markdown.","title":"Lien Wikilinks vers lien markdown"},{"location":"fr/Obsidian%20Github%20Publisher/#transclusion-embed","text":"Vous pouvez choisir d\u2019envoyer des fichiers transcluent : Des images : L\u2019image sera copi\u00e9e dans le d\u00e9p\u00f4t dans un dossier d\u00e9fini en option ou dans le dossier par d\u00e9faut. Notes : Seuls les fichiers partag\u00e9s seront copi\u00e9s dans le d\u00e9p\u00f4t, dans leur dossier respectifs (suivant vos param\u00e8tres).","title":"Transclusion (embed)"},{"location":"fr/Obsidian%20Github%20Publisher/#parametres-du-plugin","text":"Vous pouvez configurer : La cl\u00e9 de partage utilis\u00e9e par le plugin. Par d\u00e9faut, c\u2019est share . Les dossiers exclus. La cl\u00e9 de partage ne peut pas fonctionner ici. Utile si vous oubliez de supprimer le share (ou de le mettre \u00e0 false ) et que vous d\u00e9placez un fichier dans votre archive\u2026 Ajoutez la commande pour partager le fichier dans le menu fichier (clic droit sur un fichier dans l\u2019explorateur ou en utilisant les trois points) et dans le menu \u00e9diteur (clic droit sur une note \u00e9dit\u00e9e ouverte) Ajout de la note de partage du lien dans votre presse-papiers apr\u00e8s le partage. Vous pouvez configurer le chemin cr\u00e9\u00e9 ici, en supprimant certaines parties. Comme il supporte plusieurs parties, vous pouvez s\u00e9parer les parties en utilisant des virgules. Par exemple, vous pouvez supprimer un dossier docs/ et l\u2019extension markdown en utilisant : docs/, .md . La commande du menu de clic droit peut aussi envoyer le fichier sous votre curseur si c\u2019est un lien !","title":"Param\u00e8tres du plugin"},{"location":"fr/Obsidian%20Github%20Publisher/#developpement","text":"","title":"\ud83e\udd16 D\u00e9veloppement"},{"location":"fr/Obsidian%20Github%20Publisher/#general","text":"Vous pouvez m\u2019aider \u00e0 d\u00e9velopper le plugin en utilisant npm ! Tout d\u2019abord, clonez le projet sur votre ordinateur avec git clone git@github.com:obsidianPublisher/obsidian-github-publisher.git . cd obsidian-github-publisher . npm install Quelque notes : J\u2019utilise les Conventional Commit pour g\u00e9n\u00e9rer le changelog, donc merci de respectez les sp\u00e9cifications ! De documenter les fonctions que vous cr\u00e9ez.","title":"G\u00e9n\u00e9ral"},{"location":"fr/Obsidian%20Github%20Publisher/#traduction","text":"En utilisant i18n , vous pouvez traduire le plugin. Pour ajouter un nouveau langage : Clonez le fichier i18n/locales/en-us.ts et renommez-le dans votre langue. Obtenez votre langue locale depuis Obsidian en utilisant obsidian translation ou en utilisant les commandes (dans templater par exemple) : <% tp.obsidian.moment.locale() %> Traduisez le fichier et enregistrez-le. Dans i18n/index.ts : Importez le nouveau fichier comme import language from .locales/language`. ajoutez la nouvelle langue dans l\u2019objet json localeMap : { \"language\" : language } De plus, vous pouvez tester si votre traduction est correcte. Cr\u00e9ez un PR pour ajouter votre traduction ! Si vous trouvez ce module et ce workflow utile, vous pouvez m\u2019envoyer de quoi m\u2019acheter du caf\u00e9 en grande quantit\u00e9 : Seuls les fichiers support\u00e9s par Obsidian seront supprim\u00e9s. \u21a9 De mani\u00e8re \u00e9vidente, vous devez \u00eatre connect\u00e9s pour pouvoir cr\u00e9er le token. De fait, vous \u00eates oblig\u00e9s d\u2019avoir un compte github! \u21a9","title":"Traduction"},{"location":"fr/Obsidian%20Github%20Publisher/configuration%20example/","text":"Mkdocs Publisher \u00b6 Tutoriel pour une installation rapide ! \u00b6 Cliquer sur \u201cuse this template\u201d 1 Utiliser le nom de votre choix D\u00e9finissez et \u00e9ditez le fichier configuration.yml \u00e0 la racine du d\u00e9p\u00f4t. Configuration du plugin \u00b6 Param\u00e8tres de r\u00e9ception des dossiers : Param\u00e8tres de r\u00e9ception : cl\u00e9 de m\u00e9tadonn\u00e9e Dossier par d\u00e9faut : docs/notes Cl\u00e9 de m\u00e9tadonn\u00e9e: category (vous pouvez la changer !) Dossier racine : docs Conversion des liens - [x] Note de dossier (\u201cfolder note\u201d) - [x] Liens internes - [ ] Wikilinks (la template les supporte par d\u00e9faut!) Transclusion - [x] Transf\u00e9rer les images - [x] Transf\u00e9rer les notes transclues - Dossier d\u2019images par d\u00e9fauts : docs/assets/images Github Workflow Laissez en blanc les actions GitHub Auto-nettoyage Dossier exclus : docs/assets/logo, docs/assets/js, docs/assets/css, docs/tags.md 3 Param\u00e8tre du plugin : Seuls les param\u00e8tres de suppression d\u2019une partie du lien doivent \u00eatre \u00e9diter pour fonctionner avec la template : docs/, .md Les fichiers (et les images) seront envoy\u00e9s sur votre mod\u00e8le de d\u00e9p\u00f4t GitHub, dans le dossier sp\u00e9cifi\u00e9. Informations utiles \u00b6 Liens \u00b6 Obsidian Plugin Template Comment\u2026 \u00b6 Configurer le blog Customiser le blog Copier les liens Mettre \u00e0 jour la template Support \u00b6 Wikilinks ( [[Links]] ) Transclusion/embed de fichiers, tant pour les liens wikilinks que pour les liens markdowns Callout d\u2019obsidian & les callouts personnalis\u00e9s Folder notes et leur \u201ccitation\u201d Attributs customis\u00e9s \u00c9tat de partage et hi\u00e9rarchie de dossiers personnalis\u00e9e. Mobile et PC Mini aper\u00e7u du fichier au survol Limitations \u00b6 Digital Garden \u00b6 Param\u00e8tres de r\u00e9ception du dossier : Param\u00e8tres de r\u00e9ception : Obsidian Path . Dossier par d\u00e9faut : posts Workflow : Laisser vide Activer le nettoyage automatique Param\u00e8tres des images : Transf\u00e9rer l\u2019image int\u00e9gr\u00e9e sur true Transf\u00e9rer les notes transclues sur false Dossier par d\u00e9faut : posts/Attachments . You must be connected to copy the template ! You can test locally through clone > https : git clone https://github.com/Mara-Li/mkdocs_obsidian_template.git or with downloading the ZIP \u21a9 You need to be connected to generate it. \u21a9 Normally, only file supported by obsidian are deleted, but some image exists only on the blog (for logo, for example). To prevent bad surprise, exclude these folder here. \u21a9","title":"Exemple de configuration"},{"location":"fr/Obsidian%20Github%20Publisher/configuration%20example/#mkdocs-publisher","text":"","title":"Mkdocs Publisher"},{"location":"fr/Obsidian%20Github%20Publisher/configuration%20example/#tutoriel-pour-une-installation-rapide","text":"Cliquer sur \u201cuse this template\u201d 1 Utiliser le nom de votre choix D\u00e9finissez et \u00e9ditez le fichier configuration.yml \u00e0 la racine du d\u00e9p\u00f4t.","title":"Tutoriel pour une installation rapide !"},{"location":"fr/Obsidian%20Github%20Publisher/configuration%20example/#configuration-du-plugin","text":"Param\u00e8tres de r\u00e9ception des dossiers : Param\u00e8tres de r\u00e9ception : cl\u00e9 de m\u00e9tadonn\u00e9e Dossier par d\u00e9faut : docs/notes Cl\u00e9 de m\u00e9tadonn\u00e9e: category (vous pouvez la changer !) Dossier racine : docs Conversion des liens - [x] Note de dossier (\u201cfolder note\u201d) - [x] Liens internes - [ ] Wikilinks (la template les supporte par d\u00e9faut!) Transclusion - [x] Transf\u00e9rer les images - [x] Transf\u00e9rer les notes transclues - Dossier d\u2019images par d\u00e9fauts : docs/assets/images Github Workflow Laissez en blanc les actions GitHub Auto-nettoyage Dossier exclus : docs/assets/logo, docs/assets/js, docs/assets/css, docs/tags.md 3 Param\u00e8tre du plugin : Seuls les param\u00e8tres de suppression d\u2019une partie du lien doivent \u00eatre \u00e9diter pour fonctionner avec la template : docs/, .md Les fichiers (et les images) seront envoy\u00e9s sur votre mod\u00e8le de d\u00e9p\u00f4t GitHub, dans le dossier sp\u00e9cifi\u00e9.","title":"Configuration du plugin"},{"location":"fr/Obsidian%20Github%20Publisher/configuration%20example/#informations-utiles","text":"","title":"Informations utiles"},{"location":"fr/Obsidian%20Github%20Publisher/configuration%20example/#liens","text":"Obsidian Plugin Template","title":"Liens"},{"location":"fr/Obsidian%20Github%20Publisher/configuration%20example/#comment","text":"Configurer le blog Customiser le blog Copier les liens Mettre \u00e0 jour la template","title":"Comment..."},{"location":"fr/Obsidian%20Github%20Publisher/configuration%20example/#support","text":"Wikilinks ( [[Links]] ) Transclusion/embed de fichiers, tant pour les liens wikilinks que pour les liens markdowns Callout d\u2019obsidian & les callouts personnalis\u00e9s Folder notes et leur \u201ccitation\u201d Attributs customis\u00e9s \u00c9tat de partage et hi\u00e9rarchie de dossiers personnalis\u00e9e. Mobile et PC Mini aper\u00e7u du fichier au survol","title":"Support"},{"location":"fr/Obsidian%20Github%20Publisher/configuration%20example/#limitations","text":"","title":"Limitations"},{"location":"fr/Obsidian%20Github%20Publisher/configuration%20example/#digital-garden","text":"Param\u00e8tres de r\u00e9ception du dossier : Param\u00e8tres de r\u00e9ception : Obsidian Path . Dossier par d\u00e9faut : posts Workflow : Laisser vide Activer le nettoyage automatique Param\u00e8tres des images : Transf\u00e9rer l\u2019image int\u00e9gr\u00e9e sur true Transf\u00e9rer les notes transclues sur false Dossier par d\u00e9faut : posts/Attachments . You must be connected to copy the template ! You can test locally through clone > https : git clone https://github.com/Mara-Li/mkdocs_obsidian_template.git or with downloading the ZIP \u21a9 You need to be connected to generate it. \u21a9 Normally, only file supported by obsidian are deleted, but some image exists only on the blog (for logo, for example). To prevent bad surprise, exclude these folder here. \u21a9","title":"Digital Garden"},{"location":"fr/Template/","text":"Configuration \u00b6 Configuration de Mkdocs \u00b6 Dans votre nouveau dossier publish_blog , vous trouverez un mkdocs.yml . Ce fichier vous permet de personnaliser votre blog ! Les plus importants \u00e0 \u00e9diter : site_name site_description site_url (critique) : Par d\u00e9faut, c\u2019est https://github_username.io/repo_name 1 Pour modifier le logo et le favicon, mettez d\u2019abord le fichier choisi dans assets/logo , et changez logo et favicon : logo : assets/meta/logo_name.png favicon : assets/meta/favicon.png . Vous pouvez personnaliser : Police Sch\u00e9ma de couleurs, palette, ic\u00f4nes Langue Consultez la documentation pour obtenir plus d\u2019informations Vous n\u2019avez pas besoin de toucher \u00e0 quoi que ce soit dans features ; markdown_extensions... Plugins \u00b6 Le fichier mkdocs.yml contient \u00e9galement la configuration de [Mkdocs Plugin] ( https://www.mkdocs.org/dev-guide/plugins/ ). Si vous ajoutez le plugin, vous devez l\u2019ajouter \u00e0 votre requirements.txt car la build l\u2019utilise pour construire le blog. J\u2019ai inclus : Ezlinks (from mkdocs-ezlinked-plugin) : to support directly wikilinks Mermaid2 Awesome pages Tooltipster-links (from mkdocs-preview-links-plugin) Embed File , to support embedding file as in Obsidian (with the ![](file) or ![[file]] syntax) Git revision date localized , to add a date listing Mkdocs Simple Hooks , to allow creating simple python script for mkdocs (including jinja template editing!). Mkdocs Encrypt Contents will allow you to \u201chide\u201d file in the site. See here for more information. Mkdocs Callout Custom tags attributes Superfences & dataviewjs Vous remarquerez que j\u2019ai ajout\u00e9 une custom fences pour dataviewjs. D\u00e9sol\u00e9, dataviewjs n\u2019est pas encore support\u00e9 par mkdocs ni Obsidian Publisher. Ce \u201ccustom fence\u201d cachera tous les blocs dataviewjs. Elle emp\u00eachera donc l\u2019affichage de blocs \u00e9tranges dans votre fichier markdown. Si vous avez besoin de l\u2019afficher comme du code, changez le langage (comme js par exemple). Oh non, un bug ! \u00b6 Le blog sera publi\u00e9 via GitHub Page en utilisant la branche gh-page . J\u2019ai le README \u00e0 la place de mes fichiers ! V\u00e9rifier la branche gh-pages et l\u2019activer si n\u00e9cessaire dans Settings \u2192 Pages Le workflow ne s\u2019ex\u00e9cute pas ! V\u00e9rifiez l\u2019ex\u00e9cution et l\u2019erreur dans Actions . V\u00e9rifiez si les actions ont les bons acc\u00e8s en \u00e9criture et en lecture dans Settings \u2192 Actions \u2192 General \u2192 workflow permission En cas de probl\u00e8me de worfklow Dans le probl\u00e8me 4 , nous avons d\u00e9couvert que parfois, les actions Github refusent de s\u2019ex\u00e9cuter sans raison. Si cela vous arrive, veuillez contacter le support Github ! Test local ( optionnel ) \u00b6 Pour faire fonctionner le blog en local, vous devez installer les pr\u00e9-requis et lancer mkdocs serve . cd publish_blog pip install -r requirements.txt mkdocs serve Un petit conseil : Vous pouvez utiliser un environnement conda ici (ou un venv, mais je n\u2019aime pas venv). Utilisez simplement ceci : `bash conda create -n Publisher python=3.10.4 conda activate Publisher ``` Juste avant l'installation du pip` ! Obsidian Plugin Template Documentation Vous pouvez trouver le lien dans Settings > Pages \u21a9","title":"Configuration"},{"location":"fr/Template/#configuration","text":"","title":"Configuration"},{"location":"fr/Template/#configuration-de-mkdocs","text":"Dans votre nouveau dossier publish_blog , vous trouverez un mkdocs.yml . Ce fichier vous permet de personnaliser votre blog ! Les plus importants \u00e0 \u00e9diter : site_name site_description site_url (critique) : Par d\u00e9faut, c\u2019est https://github_username.io/repo_name 1 Pour modifier le logo et le favicon, mettez d\u2019abord le fichier choisi dans assets/logo , et changez logo et favicon : logo : assets/meta/logo_name.png favicon : assets/meta/favicon.png . Vous pouvez personnaliser : Police Sch\u00e9ma de couleurs, palette, ic\u00f4nes Langue Consultez la documentation pour obtenir plus d\u2019informations Vous n\u2019avez pas besoin de toucher \u00e0 quoi que ce soit dans features ; markdown_extensions...","title":"Configuration de Mkdocs"},{"location":"fr/Template/#plugins","text":"Le fichier mkdocs.yml contient \u00e9galement la configuration de [Mkdocs Plugin] ( https://www.mkdocs.org/dev-guide/plugins/ ). Si vous ajoutez le plugin, vous devez l\u2019ajouter \u00e0 votre requirements.txt car la build l\u2019utilise pour construire le blog. J\u2019ai inclus : Ezlinks (from mkdocs-ezlinked-plugin) : to support directly wikilinks Mermaid2 Awesome pages Tooltipster-links (from mkdocs-preview-links-plugin) Embed File , to support embedding file as in Obsidian (with the ![](file) or ![[file]] syntax) Git revision date localized , to add a date listing Mkdocs Simple Hooks , to allow creating simple python script for mkdocs (including jinja template editing!). Mkdocs Encrypt Contents will allow you to \u201chide\u201d file in the site. See here for more information. Mkdocs Callout Custom tags attributes Superfences & dataviewjs Vous remarquerez que j\u2019ai ajout\u00e9 une custom fences pour dataviewjs. D\u00e9sol\u00e9, dataviewjs n\u2019est pas encore support\u00e9 par mkdocs ni Obsidian Publisher. Ce \u201ccustom fence\u201d cachera tous les blocs dataviewjs. Elle emp\u00eachera donc l\u2019affichage de blocs \u00e9tranges dans votre fichier markdown. Si vous avez besoin de l\u2019afficher comme du code, changez le langage (comme js par exemple).","title":"Plugins"},{"location":"fr/Template/#oh-non-un-bug","text":"Le blog sera publi\u00e9 via GitHub Page en utilisant la branche gh-page . J\u2019ai le README \u00e0 la place de mes fichiers ! V\u00e9rifier la branche gh-pages et l\u2019activer si n\u00e9cessaire dans Settings \u2192 Pages Le workflow ne s\u2019ex\u00e9cute pas ! V\u00e9rifiez l\u2019ex\u00e9cution et l\u2019erreur dans Actions . V\u00e9rifiez si les actions ont les bons acc\u00e8s en \u00e9criture et en lecture dans Settings \u2192 Actions \u2192 General \u2192 workflow permission En cas de probl\u00e8me de worfklow Dans le probl\u00e8me 4 , nous avons d\u00e9couvert que parfois, les actions Github refusent de s\u2019ex\u00e9cuter sans raison. Si cela vous arrive, veuillez contacter le support Github !","title":"Oh non, un bug !"},{"location":"fr/Template/#test-local-optionnel","text":"Pour faire fonctionner le blog en local, vous devez installer les pr\u00e9-requis et lancer mkdocs serve . cd publish_blog pip install -r requirements.txt mkdocs serve Un petit conseil : Vous pouvez utiliser un environnement conda ici (ou un venv, mais je n\u2019aime pas venv). Utilisez simplement ceci : `bash conda create -n Publisher python=3.10.4 conda activate Publisher ``` Juste avant l'installation du pip` ! Obsidian Plugin Template Documentation Vous pouvez trouver le lien dans Settings > Pages \u21a9","title":"Test local (optionnel)"},{"location":"fr/Template/Q%26A/","text":"1. D\u00e9p\u00f4t priv\u00e9 \u00b6 Comme j\u2019autorise ce repo \u00e0 \u00eatre un mod\u00e8le, il vous permet de cr\u00e9er un d\u00e9p\u00f4t priv\u00e9 ! Note Fork ne vous permet pas de cr\u00e9er un d\u00e9p\u00f4t priv\u00e9, c\u2019est pourquoi vous devez utiliser le mod\u00e8le. 2. Mettre \u00e0 jour le mod\u00e8le \u00b6 L\u2019utilisation d\u2019un template (\u00e0 la place de fork) emp\u00eache d\u2019obtenir la mise \u00e0 jour que je fais parfois. Donc, pour garder un \u0153il dessus, vous devez cr\u00e9er une branche bas\u00e9e sur la template. Dans le dossier clon\u00e9, (dans votre blog) faites : git remote add Template git@github.com:Mara-Li/obsidian-mkdocs-publisher-template.git git fetch Template git checkout -b template Template/main Ensuite, pour r\u00e9cup\u00e9rer la mise \u00e0 jour : git checkout template git pull Vous pouvez fusionner la branche, ou juste r\u00e9cup\u00e9rer le fichier mis \u00e0 jour avec la commande checkout : git checkout main git checkout template chemin/vers/le/fichier/quevousvoulez Il est aussi possible de merge (fusionner) les branches avec : git checkout main git merge Template/main N\u2019oubliez pas de commit et de push !","title":"Foire aux questions"},{"location":"fr/Template/Q%26A/#1-depot-prive","text":"Comme j\u2019autorise ce repo \u00e0 \u00eatre un mod\u00e8le, il vous permet de cr\u00e9er un d\u00e9p\u00f4t priv\u00e9 ! Note Fork ne vous permet pas de cr\u00e9er un d\u00e9p\u00f4t priv\u00e9, c\u2019est pourquoi vous devez utiliser le mod\u00e8le.","title":"1. D\u00e9p\u00f4t priv\u00e9"},{"location":"fr/Template/Q%26A/#2-mettre-a-jour-le-modele","text":"L\u2019utilisation d\u2019un template (\u00e0 la place de fork) emp\u00eache d\u2019obtenir la mise \u00e0 jour que je fais parfois. Donc, pour garder un \u0153il dessus, vous devez cr\u00e9er une branche bas\u00e9e sur la template. Dans le dossier clon\u00e9, (dans votre blog) faites : git remote add Template git@github.com:Mara-Li/obsidian-mkdocs-publisher-template.git git fetch Template git checkout -b template Template/main Ensuite, pour r\u00e9cup\u00e9rer la mise \u00e0 jour : git checkout template git pull Vous pouvez fusionner la branche, ou juste r\u00e9cup\u00e9rer le fichier mis \u00e0 jour avec la commande checkout : git checkout main git checkout template chemin/vers/le/fichier/quevousvoulez Il est aussi possible de merge (fusionner) les branches avec : git checkout main git merge Template/main N\u2019oubliez pas de commit et de push !","title":"2. Mettre \u00e0 jour le mod\u00e8le"},{"location":"fr/Template/Within%20Obsidian/","text":"Note Les actions github ne convertissent plus les hashtags et la conversion vers les callouts Admonition mkdocs. Maintenant, deux plugins mkdocs g\u00e8rent cela, donc vous n\u2019avez plus besoin (normalement) d\u2019utiliser obs2mk. Les plugins sont : Mkdocs Callouts Custom Tags Attributes Ces deux plugins ne changeront jamais le fichier envoy\u00e9 dans Github, car l\u2019\u00e9dition a lieu pendant la construction de la page. Le plugin modifie directement : Folder note Cat\u00e9gorisation et cr\u00e9ation des chemins de fichiers personnalis\u00e9s Si vous utilisez votre coffre-fort directement dans un d\u00e9p\u00f4t, l\u2019envoi cassera vos fichiers ! Le module n\u2019est pas pour ces strat\u00e9gies. Strat\u00e9gie : Python \u00b6 Si vous souhaitez continuer \u00e0 utiliser le workflow python, lisez ce qui suit. A propos du m\u00eame repo et du m\u00eame coffre-fort Si vous utilisez votre coffre-fort directement dans un repo, la conversion par Obs2mk cassera vos fichiers. Le script n\u2019est pas pour ces strat\u00e9gies. Exemple de textes cass\u00e9s : Hashtags : **2022/01**{ : #2022/01 .hash} Callout converti en Admonition Mkdocs Callout Votre message d\u2019accueil Liens et chemins internes Configuration Le script python utilise la configuration minimal , et cette configuration peut \u00eatre personnalis\u00e9e en utilisant un fichier nomm\u00e9 configuration.yml ajout\u00e9 dans la racine du d\u00e9p\u00f4t. Ici, vous pouvez d\u00e9sactiver la conversion des callouts et la conversion des hashtags avec : minimal : convert : admonition : false hashtags : false \u00c9videmment, vous pouvez en d\u00e9finir un true et un autre false . Note Si vous d\u00e9sactivez les deux, vous n\u2019avez pas besoin de la conversion obs2mk (vous gagnerez BEAUCOUP de temps pour le partage). Il suffit de cr\u00e9er un workflow sur push pour construire la page mkdocs. Pour ce faire, il suffit de supprimer le if dans le fichier .github/workflow/mkdocs_build.yml .","title":"Dans Obsidian"},{"location":"fr/Template/Within%20Obsidian/#strategie-python","text":"Si vous souhaitez continuer \u00e0 utiliser le workflow python, lisez ce qui suit. A propos du m\u00eame repo et du m\u00eame coffre-fort Si vous utilisez votre coffre-fort directement dans un repo, la conversion par Obs2mk cassera vos fichiers. Le script n\u2019est pas pour ces strat\u00e9gies. Exemple de textes cass\u00e9s : Hashtags : **2022/01**{ : #2022/01 .hash} Callout converti en Admonition Mkdocs Callout Votre message d\u2019accueil Liens et chemins internes Configuration Le script python utilise la configuration minimal , et cette configuration peut \u00eatre personnalis\u00e9e en utilisant un fichier nomm\u00e9 configuration.yml ajout\u00e9 dans la racine du d\u00e9p\u00f4t. Ici, vous pouvez d\u00e9sactiver la conversion des callouts et la conversion des hashtags avec : minimal : convert : admonition : false hashtags : false \u00c9videmment, vous pouvez en d\u00e9finir un true et un autre false . Note Si vous d\u00e9sactivez les deux, vous n\u2019avez pas besoin de la conversion obs2mk (vous gagnerez BEAUCOUP de temps pour le partage). Il suffit de cr\u00e9er un workflow sur push pour construire la page mkdocs. Pour ce faire, il suffit de supprimer le if dans le fichier .github/workflow/mkdocs_build.yml .","title":"Strat\u00e9gie : Python"},{"location":"fr/Template/Workflow/","text":"Il y a beaucoup d\u2019actions Github ici ! Tout d\u2019abord, si vous avez besoin d\u2019informations sur ce qu\u2019est une action Github : D\u00e9finition Les GitHub Actions permettent d\u2019automatiser facilement tous vos flux de travail logiciels, d\u00e9sormais avec un CI/CD de classe mondiale. Construisez, testez et d\u00e9ployez votre code directement depuis GitHub. Faites fonctionner les revues de code, la gestion des branches et le triage des probl\u00e8mes comme vous le souhaitez 1 . Je vais tout expliquer, ne paniquez pas ! Comme vous pouvez le voir, ici, les actions github (~ le workflow) sont utilis\u00e9es pour construire Obsidian To Mkdocs (Ou Mkdocs Obsidian Publisher) en utilisant les fichiers de votre d\u00e9p\u00f4t. Sur les push : mkdocs_build.yml Le fichier .github/workflows/mkdocs_build.yml est utilis\u00e9 pour construire le site mkdocs. Il ex\u00e9cute simplement les installations des exigences et les commandes pour construire la page github. Ce workflow ne sera ex\u00e9cut\u00e9 que pour la branche principale ou master, et si le push inclut des fichiers provenant de : docs requirements.txt README.md overrides mkdocs.yml Chaque jour : update_requirements.yml Je l\u2019ai cr\u00e9\u00e9 parce que le Cache Github a besoin d\u2019une version fixe sur les requirements, mais il arrive r\u00e9guli\u00e8rement que je mette \u00e0 jour certains plugins ou qu\u2019il y ait une nouvelle version de Material Mkdocs. Ainsi, ce workflow ne modifiera le fichier requirements.txt uniquement s\u2019il trouve une mise \u00e0 jour. Activ\u00e9 : create_index.yml Vous permet de cr\u00e9er rapidement une nouvelle \u201ccat\u00e9gorie\u201d / liste de blogs dans votre d\u00e9p\u00f4t, en cr\u00e9ant un nouveau dossier sp\u00e9cifi\u00e9 avec le nom de la cat\u00e9gorie. Pour cr\u00e9er une nouvelle cat\u00e9gorie, suivez les \u00e9tapes ci-dessous : Allez dans l\u2019onglet \u201cActions\u201d. Cliquez sur \u201cIndex creation\u201d cliquez sur \u201cRun workflow\u201d. Remplir le formulaire : - Nom du dossier ( New folder name ) : Le nom du dossier que vous souhaitez cr\u00e9er, ce sera la \u201cnouvelle cat\u00e9gorie\u201d. - Dossier parent ( The path of the new folder ) : Le chemin optionnel du dossier dans lequel vous voulez cr\u00e9er la nouvelle cat\u00e9gorie. Par exemple, main_category/draft cr\u00e9era le dossier docs/main_category/draft/folder_name . - Description : Une description optionnelle de la cat\u00e9gorie. - Vous pouvez \u00e9galement : - Cacher le TOC ( Hide the toc 2 ) dans le fichier d\u2019index - Cacher le panneau de navigation dans le fichier d\u2019index. - Effectuer un dry-run : Il ne montrera que le r\u00e9sultat de l\u2019op\u00e9ration, mais ne cr\u00e9era pas le dossier et le fichier d\u2019index. Vous pouvez \u00e9galement cr\u00e9er une ex\u00e9cution conditionnelle du workflow avec le mot-cl\u00e9 if . Par exemple, chaque \u00e9v\u00e9nement de fusion sera pr\u00e9c\u00e9d\u00e9 de [PUBLISHER] . Vous pouvez aussi cr\u00e9er un flux de travail bas\u00e9 sur une \u201cpull request\u201d. En utilisant le mot-cl\u00e9 if Ciblez le nom de l\u2019\u00e9v\u00e9nement de fusion avec : if : startsWith(github.event.head_commit.message, '[PUBLISHER]') . Vous pouvez utiliser le mot-cl\u00e9 if pour des \u00e9tapes ou des jobs entiers. \u00c0 propos de l\u2019ex\u00e9cution du workflow Si vous utilisez les workflows ( tous les workflows) sur un d\u00e9p\u00f4t priv\u00e9 , vous devez savoir que vous avez seulement 2000 minutes (3000 avec un compte pro) d\u2019ex\u00e9cution du workflow. La construction de Mkdocs prend environ 2 minutes (plus pour les gros d\u00e9p\u00f4ts) voire plus (!). La mise \u00e0 jour des requirements (chaque 24 heures) prend ~30s Enfin, vous pouvez ex\u00e9cuter ~1000 build de blog par mois (1500 pour les pro), soit environ 32 build par jour. Note : Le cache de pip va normalement acc\u00e9l\u00e9rer le processus, donc l\u2019action de l\u2019\u00e9diteur doit prendre plus de 1min-1min30 que deux pour une petite build. Merci au site officiel \u21a9 TOC signifie \u201cTable of content\u201d, c\u2019est \u00e0 dire le sommaire. \u21a9","title":"Github Actions"},{"location":"fr/Template/customization/","text":"Attributs customis\u00e9s et tags \u00b6 Tags \u00b6 Le plugin markdown Custom tags attributes convertira tous les #tags en **tags**{ : #tags .hash} et y ajoutera un CSS personnalis\u00e9. 2022/01/01 deviendra **2022/01/01**{: #2022/01 .hash} : #2022/01/01 Attributs Markdown en ligne \u00b6 Vous pouvez cr\u00e9er des Attributs Markdown en ligne \u00e0 l\u2019aide de hashtags. Par exemple, pour aligner un texte \u00e0 droite : Add # right { display : inline-block ; width : 100 % ; text-align : right ; font-weight : normal ; } # blue { color : blue ; } Ajouter #right sur la derni\u00e8re partie d\u2019une ligne, et un #blue sur un mot al\u00e9atoire : Lorem ipsum dolor sit amet, consectetur adipiscing#blue elit. In mollis, libero porttitor gravida accumsan, justo metus pulvinar nulla, vitae dictum odio ligula non nisl. Vivamus id venenatis nulla. Nullam sed euismod ligula. Pellentesque tempor elit felis, lobortis vulputate risus gravida et. Curabitur auctor sed libero nec consectetur. Nam placerat rhoncus risus, euismod sagittis eros bibendum ac. Maecenas tellus libero, porttitor ac purus sit amet, viverra suscipit dolor. Proin id nisl velit. Ut at tincidunt libero, ac pharetra mi. Integer non luctus nisi.#right Cela appara\u00eetra comme : Lorem ipsum dolor sit amet, consectetur adipiscing blue elit. In mollis, libero porttitor gravida accumsan, justo metus pulvinar nulla, vitae dictum odio ligula non nisl. Vivamus id venenatis nulla. Nullam sed euismod ligula. Pellentesque tempor elit felis, lobortis vulputate risus gravida et. Curabitur auctor sed libero nec consectetur. Nam placerat rhoncus risus, euismod sagittis eros bibendum ac. Maecenas tellus libero, porttitor ac purus sit amet, viverra suscipit dolor. Proin id nisl velit. Ut at tincidunt libero, ac pharetra mi. Integer non luctus nisi. Notez qu\u2019il peut y avoir un comportement \u00e9trange caus\u00e9 par le fonctionnement de attribute list mais cela fonctionne pour la majorit\u00e9 des cas d\u2019utilisation. Vous pouvez obtenir plus d\u2019informations dans la documentation de mkdocs-custom-tags-attributes (en anglais) . Folder note \u00b6 Vous pouvez cr\u00e9er une note de dossier si vous utilisez une cl\u00e9 d\u2019entr\u00e9e category qui a le dernier dossier avec le m\u00eame nom que le fichier. Par exemple : category : folder1/folder2/filename . Le fichier filename sera renomm\u00e9 index et le dossier sera nomm\u00e9 filename . Si vous utilisez folder note dans obs2mk sans Obsidian Plugin, vous devez configurer une cl\u00e9 d\u2019index. Voir ici pour plus d\u2019informations Callout & Admonition \u00b6 Le script supporte les admonitions personnalis\u00e9es. Pour cela, vous devez d\u2019abord \u00e9diter ou ajouter un nouveau fichier css en ajoutant le support de votre nouveau callout customis\u00e9 comme indiqu\u00e9 dans Admonition\u2019s docs . Par exemple, pour ajouter une admonition dictionnary : : root { --md-admonition-icon--dictionnary : url ( 'data:image/svg+xml;charset=utf-8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18 22a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-6v7L9.5 7.5 7 9V2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12z\"/></svg>' ) } . md-typeset . admonition . dictionnary , . md-typeset details . dictionnary { border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . dictionnary > . admonition-title , . md-typeset . dictionnary > . summary { background-color : rgba ( 43 , 155 , 70 , 0.1 ); border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . dictionnary > . admonition-title :: before , . md-typeset . dictionnary > summary :: before { background-color : rgb ( 43 , 155 , 70 ); -webkit- mask-image : var ( --md-admonition-icon--dictionnary ); mask-image : var ( --md-admonition-icon--dictionnary ); Cela vous donnera : Dictionnary Here\u2019s a callout block. It supports markdown and wikilinks Le dictionnaire sera reconnu, et converti ! Liste d\u2019article \u00b6 Une nouvelle fa\u00e7on d\u2019afficher votre article/poste est d\u2019utiliser un mod\u00e8le sp\u00e9cial. Pour organiser cela, vous devez utiliser : Des index de pagination Un fichier index.md dans un dossier (dossier \u201cune cat\u00e9gorie\u201d). Cet index est sous cette forme : --- template: blog.html title: Folder Index category: FolderName hidden: True --- Une chouette description Le blog.html utilise un fichier dans overrides/partials . Si vous voulez cacher un fichier de cette liste, vous pouvez utiliser la cl\u00e9 hidden dans le frontmatter. Plugin La date affich\u00e9e d\u00e9pend d\u2019un nouveau plugin nomm\u00e9 mkdocs-git-revision-date-localized-plugin . N\u2019oubliez pas de le personnaliser ! Pour afficher une image illustrative, veuillez ajouter une cl\u00e9 de m\u00e9tadonn\u00e9e dans le frontmatter Image situ\u00e9e dans le blog : image: Cette image doit \u00eatre le nom de l\u2019image (+ extension) et plac\u00e9e dans assets/img . Image externe: banner: Vous pouvez aussi utiliser la github action create_index pour cr\u00e9er un nouvel index pour un nouveau dossier. Pour plus d\u2019information voir Workflow","title":"Personnalisation"},{"location":"fr/Template/customization/#attributs-customises-et-tags","text":"","title":"Attributs customis\u00e9s et tags"},{"location":"fr/Template/customization/#tags","text":"Le plugin markdown Custom tags attributes convertira tous les #tags en **tags**{ : #tags .hash} et y ajoutera un CSS personnalis\u00e9. 2022/01/01 deviendra **2022/01/01**{: #2022/01 .hash} : #2022/01/01","title":"Tags"},{"location":"fr/Template/customization/#attributs-markdown-en-ligne","text":"Vous pouvez cr\u00e9er des Attributs Markdown en ligne \u00e0 l\u2019aide de hashtags. Par exemple, pour aligner un texte \u00e0 droite : Add # right { display : inline-block ; width : 100 % ; text-align : right ; font-weight : normal ; } # blue { color : blue ; } Ajouter #right sur la derni\u00e8re partie d\u2019une ligne, et un #blue sur un mot al\u00e9atoire : Lorem ipsum dolor sit amet, consectetur adipiscing#blue elit. In mollis, libero porttitor gravida accumsan, justo metus pulvinar nulla, vitae dictum odio ligula non nisl. Vivamus id venenatis nulla. Nullam sed euismod ligula. Pellentesque tempor elit felis, lobortis vulputate risus gravida et. Curabitur auctor sed libero nec consectetur. Nam placerat rhoncus risus, euismod sagittis eros bibendum ac. Maecenas tellus libero, porttitor ac purus sit amet, viverra suscipit dolor. Proin id nisl velit. Ut at tincidunt libero, ac pharetra mi. Integer non luctus nisi.#right Cela appara\u00eetra comme : Lorem ipsum dolor sit amet, consectetur adipiscing blue elit. In mollis, libero porttitor gravida accumsan, justo metus pulvinar nulla, vitae dictum odio ligula non nisl. Vivamus id venenatis nulla. Nullam sed euismod ligula. Pellentesque tempor elit felis, lobortis vulputate risus gravida et. Curabitur auctor sed libero nec consectetur. Nam placerat rhoncus risus, euismod sagittis eros bibendum ac. Maecenas tellus libero, porttitor ac purus sit amet, viverra suscipit dolor. Proin id nisl velit. Ut at tincidunt libero, ac pharetra mi. Integer non luctus nisi. Notez qu\u2019il peut y avoir un comportement \u00e9trange caus\u00e9 par le fonctionnement de attribute list mais cela fonctionne pour la majorit\u00e9 des cas d\u2019utilisation. Vous pouvez obtenir plus d\u2019informations dans la documentation de mkdocs-custom-tags-attributes (en anglais) .","title":"Attributs Markdown en ligne"},{"location":"fr/Template/customization/#folder-note","text":"Vous pouvez cr\u00e9er une note de dossier si vous utilisez une cl\u00e9 d\u2019entr\u00e9e category qui a le dernier dossier avec le m\u00eame nom que le fichier. Par exemple : category : folder1/folder2/filename . Le fichier filename sera renomm\u00e9 index et le dossier sera nomm\u00e9 filename . Si vous utilisez folder note dans obs2mk sans Obsidian Plugin, vous devez configurer une cl\u00e9 d\u2019index. Voir ici pour plus d\u2019informations","title":"Folder note"},{"location":"fr/Template/customization/#callout-admonition","text":"Le script supporte les admonitions personnalis\u00e9es. Pour cela, vous devez d\u2019abord \u00e9diter ou ajouter un nouveau fichier css en ajoutant le support de votre nouveau callout customis\u00e9 comme indiqu\u00e9 dans Admonition\u2019s docs . Par exemple, pour ajouter une admonition dictionnary : : root { --md-admonition-icon--dictionnary : url ( 'data:image/svg+xml;charset=utf-8, <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18 22a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-6v7L9.5 7.5 7 9V2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12z\"/></svg>' ) } . md-typeset . admonition . dictionnary , . md-typeset details . dictionnary { border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . dictionnary > . admonition-title , . md-typeset . dictionnary > . summary { background-color : rgba ( 43 , 155 , 70 , 0.1 ); border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . dictionnary > . admonition-title :: before , . md-typeset . dictionnary > summary :: before { background-color : rgb ( 43 , 155 , 70 ); -webkit- mask-image : var ( --md-admonition-icon--dictionnary ); mask-image : var ( --md-admonition-icon--dictionnary ); Cela vous donnera : Dictionnary Here\u2019s a callout block. It supports markdown and wikilinks Le dictionnaire sera reconnu, et converti !","title":"Callout &amp; Admonition"},{"location":"fr/Template/customization/#liste-darticle","text":"Une nouvelle fa\u00e7on d\u2019afficher votre article/poste est d\u2019utiliser un mod\u00e8le sp\u00e9cial. Pour organiser cela, vous devez utiliser : Des index de pagination Un fichier index.md dans un dossier (dossier \u201cune cat\u00e9gorie\u201d). Cet index est sous cette forme : --- template: blog.html title: Folder Index category: FolderName hidden: True --- Une chouette description Le blog.html utilise un fichier dans overrides/partials . Si vous voulez cacher un fichier de cette liste, vous pouvez utiliser la cl\u00e9 hidden dans le frontmatter. Plugin La date affich\u00e9e d\u00e9pend d\u2019un nouveau plugin nomm\u00e9 mkdocs-git-revision-date-localized-plugin . N\u2019oubliez pas de le personnaliser ! Pour afficher une image illustrative, veuillez ajouter une cl\u00e9 de m\u00e9tadonn\u00e9e dans le frontmatter Image situ\u00e9e dans le blog : image: Cette image doit \u00eatre le nom de l\u2019image (+ extension) et plac\u00e9e dans assets/img . Image externe: banner: Vous pouvez aussi utiliser la github action create_index pour cr\u00e9er un nouvel index pour un nouveau dossier. Pour plus d\u2019information voir Workflow","title":"Liste d'article"},{"location":"fr/Template/limitations/","text":"Limitations \u00b6 \u00c9videmment, aucun plugin d\u2019obsidian ne fonctionnera. Seuls ceux fournissant une API pourront \u00e9ventuellement \u00eatre support\u00e9, tel que Dataview (converti en markdown.) Pas de vue graphique mkdocs et Material Mkdocs ne supporte pas les tags inline, et vous perdrez les liens dans ces tags.Voir custom and tags attributes pour plus d\u2019informations. Les tags imbriqu\u00e9es ne sont pas prises en charge","title":"Limitations"},{"location":"fr/Template/limitations/#limitations","text":"\u00c9videmment, aucun plugin d\u2019obsidian ne fonctionnera. Seuls ceux fournissant une API pourront \u00e9ventuellement \u00eatre support\u00e9, tel que Dataview (converti en markdown.) Pas de vue graphique mkdocs et Material Mkdocs ne supporte pas les tags inline, et vous perdrez les liens dans ces tags.Voir custom and tags attributes pour plus d\u2019informations. Les tags imbriqu\u00e9es ne sont pas prises en charge","title":"Limitations"},{"location":"fr/Template/snippets%20and%20tools/","text":"En travaillant sur mon blog, j\u2019ai cr\u00e9\u00e9 quelques snippets sympas ou outils utiles. Snippets CSS \u00b6 Extraits CSS de la grille \u00b6 Convertir automatiquement le grid callout layout (de ITS) en mkdocs Ajoutez ceci \u00e0 n\u2019importe quel fichier css : : root { --md-admonition-icon--grid : url ( 'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path d=\"M352 432c0 8.836-7.164 16-16 16H176c-8.838 0-16-7.164-16-16V128H48c-26.51 0-48 21.5-48 48v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48v-80H352v48zm-248 7c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30zm0-104c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30zm0-104c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-5 4.03-9 9-9h30c4.969 0 9 4.031 9 9v30zm304 178c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30c0 4.969-4.031 9-9 9h-30c-4.969 0-9-4.031-9-9v-30zM591.1 0h-352c-25.6 0-48 21.49-48 48v256c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V48c.9-26.51-20.6-48-48-48zm-288 64c17.68 0 32 14.33 32 32s-14.32 32-32 32c-16.8 0-32-14.3-32-32s15.2-32 32-32zm271 215.6c-2.8 5.2-8.2 8.4-14.1 8.4H271.1c-6 0-10.6-3.4-13.4-8.7-2.7-5.4-2.2-11.9 1.4-16.7l70-96c3-4.2 7.8-6.6 12-6.6 5.11 0 9.914 2.441 12.93 6.574l22.35 30.66 62.74-94.11C442.1 98.67 447.1 96 453.3 96c5.348 0 10.34 2.672 13.31 7.125l106.7 160c3.29 4.875 3.59 11.175.79 16.475z\"/></svg>' ); } . md-typeset . admonition . grid { box-shadow : none ; } . md-typeset . admonition . grid p : not ( . admonition-title ) { display : flex ; margin-block-start : 0 ; margin-block-end : 0 ; justify-content : center ; } . md-typeset . admonition . grid img { display : table-cell ; vertical-align : middle ; padding : 1 px ; width : 75 % ; height : 75 % ; } Ajouter une banni\u00e8re sur votre blog \u00b6 Vous pouvez ajouter une banni\u00e8re d\u2019image cool avec l\u2019\u00e9dition du fichier assets/css/customization.css . . md-header , . md-nav--primary . md-nav__title [ for = \"__drawer\" ] { background : var ( --md-primary-fg-color ) url ( image_links ) left center / cover no-repeat ; } N\u2019oubliez pas d\u2019\u00e9diter le image_link avec les vrais liens ! Personnellement, j\u2019utilise une image unsplash. Plugins \u00b6 Requirements N\u2019oubliez pas d\u2019ajouter le plugin dans votre requirements.txt . Custom fences \u00b6 Fourni avec le mod\u00e8le Certains plugins d\u2019Obsidian utilisent des codeblocks pour faire certaines choses, comme [Agtable] ( https://github.com/windily-cloud/obsidian-AGtable ) ou [Table extended] ( https://github.com/aidenlx/table-extended ). Pour convertir automatiquement ces blocs en markdown, j\u2019utilise un mini plugin que j\u2019ai \u00e9crit : Mkdocs Custom Fence Pour l\u2019utiliser : Ajouter mkdocs_custom_fences dans votre requirements.txt Modifiez le fichier mkdocs.yml comme suit : markdow_extensions : pymdownx.superfences : custom_fences : - nom : md-render classe : md-render format : !!python/name:mkdocs_custom_fences.md_render.md_sub_render Par exemple, pour AGtable : - pymdownx.superfences : custom_fences : - nom : agtable classe : agtable format : !!python/name:mkdocs_custom_fences.md_render.md_sub_render Mkdocs Callouts \u00b6 Fourni avec le mod\u00e8le Informations sur le plugin Un plugin simple qui convertit les callouts de style Obsidian et les transforme en Admonitions support\u00e9es par mkdocs. Lien : https://pypi.org/project/mkdocs-callouts/ Installation : pip install mkdocs-callouts Page chiffr\u00e9e \u00b6 La configuration de base pour Material et de ce mod\u00e8le est d\u00e9j\u00e0 incluse dans le fichier mkdocs.yml et dans utils.css . Informations sur le plugin Ce plugin vous permet d\u2019avoir des articles et des pages prot\u00e9g\u00e9s par un mot de passe dans MKdocs. Lien : https://pypi.org/project/mkdocs-encryptcontent-plugin/ Installation : pip install mkdocs-encryptcontent-plugin Tout d\u2019abord, configurez l\u2019affichage de ce plugin pour mkdocs en ajoutant ceci dans votre css : [ data-md-color-scheme = \"slate\" ] # mkdocs-content-password { background-color : rgba ( 0 , 0 , 0 , 0.11 ) } [ data-md-color-scheme = \"default\" ] # mkdocs-content-password { background-color : white ; } # mkdocs-content-password { border-radius : 5 px ; height : 40 px ; width : 50 % ; padding-left : 10 px ; } # mkdocs-decrypt-button { border-radius : 5 px ; fill : var ( --md-default-fg-color--light ); height : 30 px ; width : 5 % ; } Configurez le mkdocs.yml pour ajouter le plugin, comme dit dans le README. Exemple Cette configuration permet de m\u00e9moriser le mot de passe et d\u2019utiliser un mot de passe par page. plugins: - encryptcontent: title_prefix: '\ud83d\udd10 ' summary: 'Private page' placeholder: 'Password' decryption_failure_message: 'Invalid!!' encryption_info_message: \"You don't have access to this page without password\" remember_password: True search_index: 'encrypted' **Material**{: #Material .hash} doesn't support dynamicaly encryption search password_button: True password_button_text: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height=\"1em\" width=\"1em\"><path d=\"M416 32h-64c-17.67 0-32 14.33-32 32s14.33 32 32 32h64c17.67 0 32 14.33 32 32v256c0 17.67-14.33 32-32 32h-64c-17.67 0-32 14.33-32 32s14.33 32 32 32h64c53.02 0 96-42.98 96-96V128C512 74.98 469 32 416 32zM342.6 233.4l-128-128c-12.51-12.51-32.76-12.49-45.25 0c-12.5 12.5-12.5 32.75 0 45.25L242.8 224H32C14.31 224 0 238.3 0 256s14.31 32 32 32h210.8l-73.38 73.38c-12.5 12.5-12.5 32.75 0 45.25s32.75 12.5 45.25 0l128-128C355.1 266.1 355.1 245.9 342.6 233.4z\"/></svg>' Mais vous pourriez aussi soutenir une documentation enti\u00e8rement crypt\u00e9e plugins: - encryptcontent: global_password: 'votre_mot_de_passe' Pour ajouter une page unique chiffr\u00e9e, il suffit d\u2019ajouter password : your_secret_password dans votre fichier markdown. S\u00e9curit\u00e9 \u00c9videmment, si vous l\u2019utilisez dans un d\u00e9p\u00f4t public, il est totalement inutile d\u2019ajouter cette s\u00e9curit\u00e9 (le fichier peut \u00eatre consult\u00e9 uniquement sur GitHub). N\u2019utilisez pas ce plugin pour partager des informations sensibles ! Custom tags attributes \u00b6 Fourni avec le mod\u00e8le Custom tags attribute Ajouter attribute list en utilisant simplement des tags dans vos textes. Lien: Custom tags attributes Installation: pip install mkdocs-custom-tags-attributes","title":"Snippets et outils"},{"location":"fr/Template/snippets%20and%20tools/#snippets-css","text":"","title":"Snippets CSS"},{"location":"fr/Template/snippets%20and%20tools/#extraits-css-de-la-grille","text":"Convertir automatiquement le grid callout layout (de ITS) en mkdocs Ajoutez ceci \u00e0 n\u2019importe quel fichier css : : root { --md-admonition-icon--grid : url ( 'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path d=\"M352 432c0 8.836-7.164 16-16 16H176c-8.838 0-16-7.164-16-16V128H48c-26.51 0-48 21.5-48 48v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48v-80H352v48zm-248 7c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30zm0-104c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30zm0-104c0 4.969-4.031 9-9 9H65c-4.969 0-9-4.031-9-9v-30c0-5 4.03-9 9-9h30c4.969 0 9 4.031 9 9v30zm304 178c0-4.969 4.031-9 9-9h30c4.969 0 9 4.031 9 9v30c0 4.969-4.031 9-9 9h-30c-4.969 0-9-4.031-9-9v-30zM591.1 0h-352c-25.6 0-48 21.49-48 48v256c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V48c.9-26.51-20.6-48-48-48zm-288 64c17.68 0 32 14.33 32 32s-14.32 32-32 32c-16.8 0-32-14.3-32-32s15.2-32 32-32zm271 215.6c-2.8 5.2-8.2 8.4-14.1 8.4H271.1c-6 0-10.6-3.4-13.4-8.7-2.7-5.4-2.2-11.9 1.4-16.7l70-96c3-4.2 7.8-6.6 12-6.6 5.11 0 9.914 2.441 12.93 6.574l22.35 30.66 62.74-94.11C442.1 98.67 447.1 96 453.3 96c5.348 0 10.34 2.672 13.31 7.125l106.7 160c3.29 4.875 3.59 11.175.79 16.475z\"/></svg>' ); } . md-typeset . admonition . grid { box-shadow : none ; } . md-typeset . admonition . grid p : not ( . admonition-title ) { display : flex ; margin-block-start : 0 ; margin-block-end : 0 ; justify-content : center ; } . md-typeset . admonition . grid img { display : table-cell ; vertical-align : middle ; padding : 1 px ; width : 75 % ; height : 75 % ; }","title":"Extraits CSS de la grille"},{"location":"fr/Template/snippets%20and%20tools/#ajouter-une-banniere-sur-votre-blog","text":"Vous pouvez ajouter une banni\u00e8re d\u2019image cool avec l\u2019\u00e9dition du fichier assets/css/customization.css . . md-header , . md-nav--primary . md-nav__title [ for = \"__drawer\" ] { background : var ( --md-primary-fg-color ) url ( image_links ) left center / cover no-repeat ; } N\u2019oubliez pas d\u2019\u00e9diter le image_link avec les vrais liens ! Personnellement, j\u2019utilise une image unsplash.","title":"Ajouter une banni\u00e8re sur votre blog"},{"location":"fr/Template/snippets%20and%20tools/#plugins","text":"Requirements N\u2019oubliez pas d\u2019ajouter le plugin dans votre requirements.txt .","title":"Plugins"},{"location":"fr/Template/snippets%20and%20tools/#custom-fences","text":"Fourni avec le mod\u00e8le Certains plugins d\u2019Obsidian utilisent des codeblocks pour faire certaines choses, comme [Agtable] ( https://github.com/windily-cloud/obsidian-AGtable ) ou [Table extended] ( https://github.com/aidenlx/table-extended ). Pour convertir automatiquement ces blocs en markdown, j\u2019utilise un mini plugin que j\u2019ai \u00e9crit : Mkdocs Custom Fence Pour l\u2019utiliser : Ajouter mkdocs_custom_fences dans votre requirements.txt Modifiez le fichier mkdocs.yml comme suit : markdow_extensions : pymdownx.superfences : custom_fences : - nom : md-render classe : md-render format : !!python/name:mkdocs_custom_fences.md_render.md_sub_render Par exemple, pour AGtable : - pymdownx.superfences : custom_fences : - nom : agtable classe : agtable format : !!python/name:mkdocs_custom_fences.md_render.md_sub_render","title":"Custom fences"},{"location":"fr/Template/snippets%20and%20tools/#mkdocs-callouts","text":"Fourni avec le mod\u00e8le Informations sur le plugin Un plugin simple qui convertit les callouts de style Obsidian et les transforme en Admonitions support\u00e9es par mkdocs. Lien : https://pypi.org/project/mkdocs-callouts/ Installation : pip install mkdocs-callouts","title":"Mkdocs Callouts"},{"location":"fr/Template/snippets%20and%20tools/#page-chiffree","text":"La configuration de base pour Material et de ce mod\u00e8le est d\u00e9j\u00e0 incluse dans le fichier mkdocs.yml et dans utils.css . Informations sur le plugin Ce plugin vous permet d\u2019avoir des articles et des pages prot\u00e9g\u00e9s par un mot de passe dans MKdocs. Lien : https://pypi.org/project/mkdocs-encryptcontent-plugin/ Installation : pip install mkdocs-encryptcontent-plugin Tout d\u2019abord, configurez l\u2019affichage de ce plugin pour mkdocs en ajoutant ceci dans votre css : [ data-md-color-scheme = \"slate\" ] # mkdocs-content-password { background-color : rgba ( 0 , 0 , 0 , 0.11 ) } [ data-md-color-scheme = \"default\" ] # mkdocs-content-password { background-color : white ; } # mkdocs-content-password { border-radius : 5 px ; height : 40 px ; width : 50 % ; padding-left : 10 px ; } # mkdocs-decrypt-button { border-radius : 5 px ; fill : var ( --md-default-fg-color--light ); height : 30 px ; width : 5 % ; } Configurez le mkdocs.yml pour ajouter le plugin, comme dit dans le README. Exemple Cette configuration permet de m\u00e9moriser le mot de passe et d\u2019utiliser un mot de passe par page. plugins: - encryptcontent: title_prefix: '\ud83d\udd10 ' summary: 'Private page' placeholder: 'Password' decryption_failure_message: 'Invalid!!' encryption_info_message: \"You don't have access to this page without password\" remember_password: True search_index: 'encrypted' **Material**{: #Material .hash} doesn't support dynamicaly encryption search password_button: True password_button_text: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height=\"1em\" width=\"1em\"><path d=\"M416 32h-64c-17.67 0-32 14.33-32 32s14.33 32 32 32h64c17.67 0 32 14.33 32 32v256c0 17.67-14.33 32-32 32h-64c-17.67 0-32 14.33-32 32s14.33 32 32 32h64c53.02 0 96-42.98 96-96V128C512 74.98 469 32 416 32zM342.6 233.4l-128-128c-12.51-12.51-32.76-12.49-45.25 0c-12.5 12.5-12.5 32.75 0 45.25L242.8 224H32C14.31 224 0 238.3 0 256s14.31 32 32 32h210.8l-73.38 73.38c-12.5 12.5-12.5 32.75 0 45.25s32.75 12.5 45.25 0l128-128C355.1 266.1 355.1 245.9 342.6 233.4z\"/></svg>' Mais vous pourriez aussi soutenir une documentation enti\u00e8rement crypt\u00e9e plugins: - encryptcontent: global_password: 'votre_mot_de_passe' Pour ajouter une page unique chiffr\u00e9e, il suffit d\u2019ajouter password : your_secret_password dans votre fichier markdown. S\u00e9curit\u00e9 \u00c9videmment, si vous l\u2019utilisez dans un d\u00e9p\u00f4t public, il est totalement inutile d\u2019ajouter cette s\u00e9curit\u00e9 (le fichier peut \u00eatre consult\u00e9 uniquement sur GitHub). N\u2019utilisez pas ce plugin pour partager des informations sensibles !","title":"Page chiffr\u00e9e"},{"location":"fr/Template/snippets%20and%20tools/#custom-tags-attributes","text":"Fourni avec le mod\u00e8le Custom tags attribute Ajouter attribute list en utilisant simplement des tags dans vos textes. Lien: Custom tags attributes Installation: pip install mkdocs-custom-tags-attributes","title":"Custom tags attributes"},{"location":"fr/Template/useful%20plugins/","text":"Some useful plugin to support the script : Metacopy Commander Alx Folder Note Custom Attribute : CM6 Live Preview ; Markdown Attribute Contextual Typography Metacopy \u00b6 En utilisant metacopy vous pouvez rapidement copier un lien vers une page partag\u00e9e Pour cr\u00e9er un lien, vous devez configurer : category dans key Ajoutez votre set_url dans base link . Ajoutez category dans le lien key . En outre, vous pouvez supprimer la m\u00e9tacopie de votre menu fichier en utilisant une cl\u00e9 de m\u00e9tadonn\u00e9e, de sorte que vous pouvez activer la m\u00e9tacopie seulement pour share : true . Metacopy supporte \u00e9galement le folder note . La configuration finale de metacopy pour mkdocs_obsidian sera : Ainsi, au final, un menu appara\u00eetra sur le fichier avec share : true et une category configur\u00e9e. Ce menu se trouve sur le clic gauche et le menu fichier. Vous pouvez rapidement copier un lien \u00e0 partir de l\u00e0, comme un lien de partage Google ou notion ! Front matter template \u00b6 title: share: description: category:","title":"Plugins utiles pour Obsidian"},{"location":"fr/Template/useful%20plugins/#metacopy","text":"En utilisant metacopy vous pouvez rapidement copier un lien vers une page partag\u00e9e Pour cr\u00e9er un lien, vous devez configurer : category dans key Ajoutez votre set_url dans base link . Ajoutez category dans le lien key . En outre, vous pouvez supprimer la m\u00e9tacopie de votre menu fichier en utilisant une cl\u00e9 de m\u00e9tadonn\u00e9e, de sorte que vous pouvez activer la m\u00e9tacopie seulement pour share : true . Metacopy supporte \u00e9galement le folder note . La configuration finale de metacopy pour mkdocs_obsidian sera : Ainsi, au final, un menu appara\u00eetra sur le fichier avec share : true et une category configur\u00e9e. Ce menu se trouve sur le clic gauche et le menu fichier. Vous pouvez rapidement copier un lien \u00e0 partir de l\u00e0, comme un lien de partage Google ou notion !","title":"Metacopy"},{"location":"fr/Template/useful%20plugins/#front-matter-template","text":"title: share: description: category:","title":"Front matter template"}]}